<!doctype html>
<html class="no-js" lang="{{ request.locale.iso_code }}">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <meta name="theme-color" content="#ff6600">
    <link rel="preconnect" href="https://cdn.shopify.com" crossorigin>
    {%- unless settings.type_header_font.system? and settings.type_body_font.system? -%}
      <link rel="preconnect" href="https://fonts.shopifycdn.com" crossorigin>
    {%- endunless -%}

    {%- if settings.favicon != blank -%}
      <link rel="icon" type="image/png" href="{{ settings.favicon | image_url: width: 32, height: 32 }}">
    {%- endif -%}

    <title>
      {% if template == 'index' %}
        WTF | Welcome To Florida - Cape Coral's Premier Kava Bar & Kratom Lounge | Best Botanical Beverages in Southwest Florida
      {% elsif template contains 'kava' %}
        {{ page_title }} | WTF Kava Bar Cape Coral | {{ shop.name }}
      {% elsif template contains 'kratom' %}
        {{ page_title }} | WTF Kratom Teas Cape Coral | {{ shop.name }}
      {% else %}
        {{ page_title }}
        {%- if current_tags %} &ndash; tagged "{{ current_tags | join: ', ' }}"{% endif -%}
        {%- if current_page != 1 %} &ndash; Page {{ current_page }}{% endif -%}
        {%- unless page_title contains shop.name or page_title contains 'WTF' %} | WTF | {{ shop.name }}{% endunless -%}
      {% endif %}
    </title>

    {% if page_description %}
      <meta name="description" content="{{ page_description | escape }}">
    {% elsif template == 'index' %}
      <meta name="description" content="WTF (Welcome To Florida) is Cape Coral's premier kava bar and kratom lounge. Custom kava drinks, kratom teas, THC beverages, and sober nightlife. Located at 1520 SE 46th Ln, serving Cape Coral, Fort Myers, and Southwest Florida. Order online or visit our botanical beverage lounge.">
    {% else %}
      <meta name="description" content="WTF | Welcome To Florida - Cape Coral's best kava bar for premium botanical beverages, custom kava drinks, kratom teas, and sober-friendly nightlife in Southwest Florida.">
    {% endif %}
    
    <!-- Local SEO Meta Tags -->
    <meta name="geo.region" content="US-FL">
    <meta name="geo.placename" content="Cape Coral">
    <meta name="geo.position" content="26.5629;-81.9495">
    <meta name="ICBM" content="26.5629, -81.9495">
    <meta name="keywords" content="WTF, Welcome To Florida, WTF Swag, kava bar cape coral, kava bars near me, cape coral kava bar, kava lounge cape coral, kava bar fort myers, kava bars florida, best kava bar cape coral, kratom cape coral, sober nightlife cape coral, WTF Cape Coral, botanical beverages florida">
    
    <!-- Open Graph Tags -->
    <meta property="og:type" content="business.business">
    <meta property="og:title" content="{% if template == 'index' %}Cape Coral's Premier Kava Bar | {{ shop.name }}{% else %}{{ page_title }} | {{ shop.name }}{% endif %}">
    <meta property="og:description" content="{% if page_description %}{{ page_description | escape }}{% else %}Cape Coral's premier kava bar offering custom kava drinks, kratom teas, and sober nightlife in Southwest Florida.{% endif %}">
    <meta property="og:url" content="{{ canonical_url }}">
    <meta property="og:site_name" content="{{ shop.name }}">
    <meta property="og:image" content="{{ 'wtf_storefront_hero_original.png' | asset_url }}">
    <meta property="business:contact_data:street_address" content="1520 SE 46th Ln, Unit B">
    <meta property="business:contact_data:locality" content="Cape Coral">
    <meta property="business:contact_data:region" content="FL">
    <meta property="business:contact_data:postal_code" content="33904">
    <meta property="business:contact_data:country_name" content="United States">
    
    <!-- Twitter Card Tags -->
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:title" content="{% if template == 'index' %}Cape Coral's Premier Kava Bar | {{ shop.name }}{% else %}{{ page_title }} | {{ shop.name }}{% endif %}">
    <meta name="twitter:description" content="{% if page_description %}{{ page_description | escape }}{% else %}Cape Coral's premier kava bar offering custom kava drinks, kratom teas, and sober nightlife.{% endif %}">
    <meta name="twitter:image" content="{{ 'wtf_storefront_hero_original.png' | asset_url }}">

    {% if settings.google_analytics_id != blank %}
      <meta name="ga4-measurement-id" content="{{ settings.google_analytics_id }}">
    {% endif %}
    {% if settings.facebook_pixel_id != blank %}
      <meta name="facebook-pixel-id" content="{{ settings.facebook_pixel_id }}">
    {% endif %}
    {% if settings.tiktok_pixel_id != blank %}
      <meta name="tiktok-pixel-id" content="{{ settings.tiktok_pixel_id }}">
    {% endif %}
    {% render 'seo-meta-tags' %}
    {% render 'enhanced-meta-tags' %}
    {% render 'structured-data' %}
    
    <!-- Comprehensive Schema Markup -->
    {% render 'brand-schema' %}
    {% render 'jsonld-local-business' %}
    {% render 'jsonld-offercatalog' %}
    {% render 'local-business-schema' %}
    
    {% if template contains 'product' %}
      {% render 'product-schema', product: product %}
    {% endif %}
    
    {% if template contains 'collection' %}
      {% render 'collection-seo-boost', collection: collection %}
    {% endif %}
    
    {% if template == 'index' or template contains 'page' %}
      {% render 'events-schema' %}
      {% render 'faq-schema' %}
      {% render 'loyalty-schema' %}
    {% endif %}

    {{ content_for_header }}

    {%- comment %} Load Google Fonts {%- endcomment %}
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&display=swap" rel="stylesheet">

    {%- comment %} Load main CSS {%- endcomment %}
    {{ 'base.css' | asset_url | stylesheet_tag }}

    {%- comment %} Load WTF Configuration {%- endcomment %}
    <script>
      (function() {
        const storeHours = {% if shop.metafields.wtf.hours.value %}{{ shop.metafields.wtf.hours.value }}{% else %}null{% endif %};
        const storeAddress = {% if shop.metafields.wtf.address.value %}{{ shop.metafields.wtf.address.value }}{% else %}null{% endif %};
        const integrationEndpoints = {% if shop.metafields.wtf.integration_endpoints.value %}{{ shop.metafields.wtf.integration_endpoints.value }}{% else %}null{% endif %};
        const lightspeedVariantMap = {% if shop.metafields.wtf.lightspeed_variant_map.value %}{{ shop.metafields.wtf.lightspeed_variant_map.value }}{% else %}{}{% endif %};
        const metafieldPhone = {% if shop.metafields.wtf.phone %}{{ shop.metafields.wtf.phone | json }}{% else %}null{% endif %};
        const metafieldEmail = {% if shop.metafields.wtf.email %}{{ shop.metafields.wtf.email | json }}{% else %}null{% endif %};
        const metafieldTimezone = {% if shop.metafields.wtf.timezone %}{{ shop.metafields.wtf.timezone | json }}{% else %}null{% endif %};
        const proxyBaseSetting = {{ settings.integration_proxy_base_path | default: '/apps/wtf' | json }};
        const adminProxyPath = {{ settings.shopify_admin_proxy_path | default: '/apps/wtf/shopify-admin' | json }};
        const normalizedProxyBase = (proxyBaseSetting || '/apps/wtf').replace(/\/$/, '');
        const lightspeedBase = integrationEndpoints?.lightspeed?.base || `${normalizedProxyBase}/lightspeed`;
        const twoAcceptBase = integrationEndpoints?.twoaccept?.base || `${normalizedProxyBase}/2accept`;

        window.WTF_ENV = {
          shopDomain: {{ shop.permanent_domain | json }},
          cartToken: {{ cart.token | json }},
          customerId: {% if customer %}{{ customer.id | json }}{% else %}null{% endif %},
          customerEmail: {% if customer %}{{ customer.email | json }}{% else %}null{% endif %},
          currency: {{ cart.currency.iso_code | default: shop.currency | json }},
          locale: {{ request.locale.iso_code | json }},
          routes: {
            cart_add_url: {{ routes.cart_add_url | json }},
            cart_change_url: {{ routes.cart_change_url | json }},
            cart_update_url: {{ routes.cart_update_url | json }},
            cart_url: {{ routes.cart_url | json }},
            predictive_search_url: {{ routes.predictive_search_url | json }},
            root_url: {{ routes.root_url | json }}
          }
        };

        const resolvedAddress = storeAddress || {
          line1: {{ settings.store_address_1 | json }},
          line2: {{ settings.store_address_2 | json }},
          city: {{ settings.store_city | json }},
          region: {{ settings.store_state | json }},
          postalCode: {{ settings.store_zip | json }},
          country: 'US'
        };

        const resolvedHours = storeHours || {
          monday: { open: '08:00', close: '22:00' },
          tuesday: { open: '08:00', close: '22:00' },
          wednesday: { open: '08:00', close: '22:00' },
          thursday: { open: '08:00', close: '22:00' },
          friday: { open: '08:00', close: '23:00' },
          saturday: { open: '08:00', close: '23:00' },
          sunday: { open: '10:00', close: '22:00' }
        };

        const fallbackPhone = {{ settings.store_phone | default: shop.phone | json }};
        const fallbackEmail = {{ settings.store_email | default: shop.customer_email | default: shop.email | json }};
        const lightspeedEnabled = {{ settings.lightspeed_enable_sync | json }};
        const lightspeedSyncInterval = {{ settings.lightspeed_sync_interval | default: 30 | times: 1000 }};
        const twoAcceptEnabled = {{ settings.twoaccept_public_key != blank | json }};

        window.WTFConfig = {
          store: {
            name: {{ shop.name | json }},
            phone: metafieldPhone || fallbackPhone,
            email: metafieldEmail || fallbackEmail,
            address: resolvedAddress,
            hours: resolvedHours,
            timezone: metafieldTimezone || 'America/New_York'
          },
          integrations: {
            shopify: {
              enabled: true,
              domain: {{ shop.permanent_domain | json }},
              locationId: null,
              endpoints: {
                adminProxy: adminProxyPath
              }
            },
            lightspeed: {
              enabled: lightspeedEnabled,
              accountId: {{ settings.lightspeed_account_id | json }},
              syncInterval: lightspeedSyncInterval,
              variantMapping: lightspeedVariantMap,
              endpoints: {
                base: lightspeedBase,
                inventory: integrationEndpoints?.lightspeed?.inventory || `${lightspeedBase}/inventory`,
                availability: integrationEndpoints?.lightspeed?.availability || `${lightspeedBase}/availability`,
                reserve: integrationEndpoints?.lightspeed?.reserve || `${lightspeedBase}/reserve`,
                release: integrationEndpoints?.lightspeed?.release || `${lightspeedBase}/release`,
                sync: integrationEndpoints?.lightspeed?.sync || `${lightspeedBase}/sync`,
                orders: integrationEndpoints?.lightspeed?.orders || `${lightspeedBase}/orders`
              }
            },
            twoaccept: {
              enabled: twoAcceptEnabled,
              publicKey: {{ settings.twoaccept_public_key | json }},
              merchantId: {{ settings.twoaccept_merchant_id | json }},
              environment: {{ settings.twoaccept_environment | default: 'production' | json }},
              enableSavedCards: {{ settings.twoaccept_enable_saved_cards | json }},
              enableApplePay: {{ settings.twoaccept_enable_apple_pay | json }},
              enableGooglePay: {{ settings.twoaccept_enable_google_pay | json }},
              endpoints: {
                base: twoAcceptBase,
                paymentMethods: integrationEndpoints?.twoaccept?.paymentMethods || `${twoAcceptBase}/payment-methods`,
                payments: integrationEndpoints?.twoaccept?.payments || `${twoAcceptBase}/payments`,
                orders: integrationEndpoints?.twoaccept?.orders || `${twoAcceptBase}/orders`,
                savedMethods: integrationEndpoints?.twoaccept?.savedMethods || `${twoAcceptBase}/customers`,
                merchantValidation: integrationEndpoints?.twoaccept?.merchantValidation || `${twoAcceptBase}/apple-pay/validate`,
                applePay: integrationEndpoints?.twoaccept?.applePay || `${twoAcceptBase}/apple-pay`
              }
            }
          },
          analytics: {
            google: {
              measurementId: {{ settings.google_analytics_id | json }},
              enabled: {{ settings.google_analytics_id != blank | json }}
            },
            googleAds: {{ settings.google_ads_id | json }},
            metaPixel: {{ settings.facebook_pixel_id | json }},
            tiktokPixel: {{ settings.tiktok_pixel_id | json }},
            snapchatPixel: {{ settings.snapchat_pixel_id | json }},
            pinterestTag: {{ settings.pinterest_tag_id | json }},
            clarityProjectId: {{ settings.clarity_project_id | json }},
            hotjarSiteId: {{ settings.hotjar_site_id | json }}
          },
          endpoints: {
            proxyBase: normalizedProxyBase,
            shopifyAdminProxy: adminProxyPath
          }
        };

        window.WTF_CONFIG_DATA = window.WTFConfig;
      })();
    </script>

    {%- comment %} Load WTF Configuration Manager {%- endcomment %}
    <script src="{{ 'wtf-config.js' | asset_url }}" defer></script>

    {%- if settings.predictive_search_enabled -%}
      <link rel="stylesheet" href="{{ 'component-predictive-search.css' | asset_url }}" media="print" onload="this.media='all'">
      <noscript>{{ 'component-predictive-search.css' | asset_url | stylesheet_tag }}</noscript>
    {%- endif -%}

      {%- render 'seo-meta-tags' -%}
      {%- render 'jsonld-core' -%}
      {%- render 'jsonld-breadcrumbs' -%}
      {%- if template.name == 'product' -%}{% render 'jsonld-product' %}{%- endif -%}
      {%- if template.name contains 'article' -%}{% render 'jsonld-article' %}{%- endif -%}

   <script>document.documentElement.className = document.documentElement.className.replace('no-js', 'js');</script>
  </head>

  <body class="gradient{% if settings.animations_hover_elements != 'none' %} animate--hover-{{ settings.animations_hover_elements }}{% endif %}">
    <a class="skip-to-content-link button visually-hidden" href="#MainContent">
      {{ 'accessibility.skip_to_text' | t }}
    </a>

    {%- comment %} Page wrapper {%- endcomment %}
    <div id="shopify-section-header">
      {% section 'header' %}
    </div>

    <main id="MainContent" class="content-for-layout focus-none" role="main" tabindex="-1">
      {{ content_for_layout }}
    </main>

    {%- comment %} Footer {%- endcomment %}
    {% section 'footer' %}

    {%- comment %} Cart Drawer {%- endcomment %}
    {%- render 'wtf-cart-drawer' -%}

    {%- comment %} Modals and overlays {%- endcomment %}
    <div id="wtf-modal-overlay" class="wtf-modal-overlay" style="display: none;"></div>
    <div id="wtf-loading-overlay" class="wtf-loading-overlay" style="display: none;">
      <div class="wtf-loading-spinner"></div>
    </div>

    {%- comment %} Accessibility announcements {%- endcomment %}
    <ul hidden>
      <li id="a11y-refresh-page-message">{{ 'accessibility.refresh_page' | t }}</li>
      <li id="a11y-new-window-message">{{ 'accessibility.link_messages.new_window' | t }}</li>
    </ul>

    {%- comment %} Global JavaScript variables {%- endcomment %}
    <script>
      window.shopUrl = '{{ request.origin }}';
      window.routes = {
        cart_add_url: '{{ routes.cart_add_url }}',
        cart_change_url: '{{ routes.cart_change_url }}',
        cart_update_url: '{{ routes.cart_update_url }}',
        cart_url: '{{ routes.cart_url }}',
        predictive_search_url: '{{ routes.predictive_search_url }}',
      };
      window.cartStrings = {
        error: `{{ 'sections.cart.cart_error' | t }}`,
        quantityError: `{{ 'sections.cart.cart_quantity_error_html' | t: quantity: '[quantity]' }}`,
      };
      window.variantStrings = {
        addToCart: `{{ 'products.product.add_to_cart' | t }}`,
        soldOut: `{{ 'products.product.sold_out' | t }}`,
        unavailable: `{{ 'products.product.unavailable' | t }}`,
        unavailable_with_option: `{{ 'products.product.value_unavailable' | t: option_value: '[value]' }}`,
      };
      window.accessibilityStrings = {
        imageAvailable: `{{ 'products.product.media.image_available' | t: index: '[index]' }}`,
        shareSuccess: `{{ 'general.share.success_message' | t }}`,
        pauseSlideshow: `{{ 'sections.slideshow.pause_slideshow' | t }}`,
        playSlideshow: `{{ 'sections.slideshow.play_slideshow' | t }}`,
      };
    </script>

    {%- if settings.predictive_search_enabled -%}
      <script src="{{ 'predictive-search.js' | asset_url }}" defer></script>
    {%- endif -%}

    {%- comment %} Optional lightweight lazy loader for data-src images {%- endcomment %}
    <script>
      document.addEventListener('DOMContentLoaded', function () {
        if ('IntersectionObserver' in window) {
          const io = new IntersectionObserver((entries, obs) => {
            entries.forEach((entry) => {
              if (!entry.isIntersecting) return;
              const img = entry.target;
              if (img.dataset && img.dataset.src) {
                img.src = img.dataset.src;
                img.removeAttribute('data-src');
              }
              obs.unobserve(img);
            });
          });
          document.querySelectorAll('img[data-src]').forEach((img) => io.observe(img));
        }
      });
    </script>

    {%- comment %} Expose product JSON on product templates for JS {%- endcomment %}
    {%- if template.name == 'product' and product -%}
      <script>
        window.WTF_PRODUCT_JSON = {{ product | json }};
      </script>
    {%- endif -%}

    {%- comment %} Analytics / pixels {%- endcomment %}
    {%- render 'wtf-analytics' -%}

    {%- comment %}
      -------------------------------------------------------------------------------------
      WTF INTEGRATION SCRIPTS
      Core functionality for Shopify, Lightspeed POS, 2accept payments, and webhooks
      -------------------------------------------------------------------------------------
    {%- endcomment %}
    
    {%- comment %} Core WTF Scripts - Load enhanced cart first and prevent conflicts {%- endcomment %}
    <script src="{{ 'wtf-enhanced-cart.js' | asset_url }}" defer></script>
    <script src="{{ 'wtf-variants.js' | asset_url }}" defer></script>
    <script src="{{ 'wtf-drink-builder-enhanced.js' | asset_url }}" defer></script>
    <script src="{{ 'wtf-upselling.js' | asset_url }}" defer></script>
    <script src="{{ 'wtf-analytics.js' | asset_url }}" defer></script>

    {%- comment %} Integration Scripts {%- endcomment %}
    <script src="{{ 'wtf-lightspeed-integration.js' | asset_url }}" defer></script>
    <script src="{{ 'wtf-2accept-integration.js' | asset_url }}" defer></script>
    <script src="{{ 'wtf-webhook-handler.js' | asset_url }}" defer></script>

    {%- comment %} Cart count hydrator (single source of truth) {%- endcomment %}
    <script>
      (function () {
        const cartCountElement = document.querySelector('[data-cart-count]');
        if (!cartCountElement) return;

        function setCartCount(count) {
          const countNum = parseInt(count || 0, 10);
          cartCountElement.textContent = countNum;
          cartCountElement.hidden = countNum === 0;
        }

        // Fetch initial count
        fetch('/cart.js')
          .then((response) => response.json())
          .then((cart) => setCartCount(cart.item_count))
          .catch(() => {
            /* Gracefully handle fetch error */
          });

        // Listen for custom cart update events
        document.addEventListener('wtf:cart:update', (event) => {
          const newCount = event.detail?.cart?.item_count ?? cartCountElement.textContent;
          setCartCount(newCount);
        });
      })();
    </script>

    {%- comment %} Initialize WTF System {%- endcomment %}
    <script>
      document.addEventListener('DOMContentLoaded', function() {
        // Initialize WTF system with configuration
        if (window.WTFConfig) {
          console.log('WTF System initialized with configuration:', window.WTFConfig.getStoreInfo());
          
          // Validate configuration
          const validation = window.WTFConfig.validate();
          if (!validation.isValid) {
            console.warn('WTF Configuration issues:', validation.errors);
          }

          // Dispatch system ready event
          document.dispatchEvent(new CustomEvent('wtf:system:ready', {
            detail: {
              config: window.WTFConfig,
              integrations: {
                lightspeed: window.WTFConfig.isIntegrationEnabled('lightspeed'),
                twoaccept: window.WTFConfig.isIntegrationEnabled('twoaccept'),
                shopify: window.WTFConfig.isIntegrationEnabled('shopify')
              }
            }
          }));
        }

        // Initialize cart persistence
        if (localStorage.getItem('wtf-cart-backup')) {
          try {
            const backupCart = JSON.parse(localStorage.getItem('wtf-cart-backup'));
            // Restore cart if needed
            console.log('Cart backup available:', backupCart);
          } catch (e) {
            localStorage.removeItem('wtf-cart-backup');
          }
        }

        // Set up cart backup on changes
        document.addEventListener('cart:updated', function(event) {
          localStorage.setItem('wtf-cart-backup', JSON.stringify(event.detail));
        });

        // Age verification for THC products
        if (window.WTFConfig && window.WTFConfig.get('customers.enableAgeVerification')) {
          const thcPages = ['/pages/thc-drinks', '/pages/thc-shots'];
          if (thcPages.some(page => window.location.pathname.includes(page))) {
            // Check if age verification is needed
            if (!sessionStorage.getItem('wtf-age-verified')) {
              // Show age verification modal
              setTimeout(() => {
                showAgeVerificationModal();
              }, 1000);
            }
          }
        }
      });

      // Age verification modal
      function showAgeVerificationModal() {
        const modal = document.createElement('div');
        modal.className = 'wtf-age-verification-modal';
        modal.innerHTML = `
          <div class="wtf-age-verification-content">
            <h2>Age Verification Required</h2>
            <p>You must be 21 or older to view THC products.</p>
            <p>Are you 21 years of age or older?</p>
            <div class="wtf-age-verification-buttons">
              <button onclick="verifyAge(true)" class="wtf-btn-yes">Yes, I'm 21+</button>
              <button onclick="verifyAge(false)" class="wtf-btn-no">No, I'm under 21</button>
            </div>
          </div>
        `;
        
        modal.style.cssText = `
          position: fixed;
          top: 0;
          left: 0;
          right: 0;
          bottom: 0;
          background: rgba(0,0,0,0.9);
          display: flex;
          align-items: center;
          justify-content: center;
          z-index: 10000;
          color: white;
          text-align: center;
        `;

        document.body.appendChild(modal);
      }

      function verifyAge(isOfAge) {
        const modal = document.querySelector('.wtf-age-verification-modal');
        if (isOfAge) {
          sessionStorage.setItem('wtf-age-verified', 'true');
          if (modal) modal.remove();
        } else {
          window.location.href = '/';
        }
      }

      // Global error handler for integrations
      window.addEventListener('error', function(event) {
        if (window.WTFConfig && window.WTFConfig.get('development.enableConsoleLogging')) {
          console.error('WTF System Error:', event.error);
        }
        
        // Report critical errors
        if (event.error && event.error.message && event.error.message.includes('WTF')) {
          // This would integrate with error reporting service
          console.warn('WTF Integration Error detected:', event.error.message);
        }
      });

      // Service worker registration for offline functionality
      if ('serviceWorker' in navigator && window.WTFConfig && window.WTFConfig.get('features.enableOfflineMode')) {
        navigator.serviceWorker.register('/sw.js')
          .then(registration => console.log('SW registered:', registration))
          .catch(error => console.log('SW registration failed:', error));
      }
    </script>

    {%- comment %} Custom checkout integration {%- endcomment %}
    {% if template contains 'cart' or template contains 'checkout' %}
      <script>
        // Initialize custom checkout if enabled
        if (window.WTF2Accept && window.WTFConfig.get('features.enableCustomCheckout')) {
          document.addEventListener('wtf:system:ready', function() {
            // Set up custom checkout flow
            console.log('Custom checkout initialized');
          });
        }
      </script>
    {% endif %}

    {%- comment %} Persistent Cart Management {%- endcomment %}
    {{ 'persistent-cart.js' | asset_url | script_tag }}
    
    {%- comment %} Pricing Validation System {%- endcomment %}
    {{ 'pricing-validation.js' | asset_url | script_tag }}

    {%- comment %} Development tools {%- endcomment %}
    {% if settings.enable_debug_mode %}
      <script>
        // Development debugging tools
        window.WTF_DEBUG = {
          config: () => console.table(window.WTFConfig?.raw || window.WTF_CONFIG_DATA || {}),
          integrations: () => console.log('Integrations:', {
            lightspeed: !!window.WTFLightspeed,
            twoaccept: !!window.WTF2Accept,
            webhooks: !!window.WTFWebhooks
          }),
          cart: () => fetch('/cart.js').then(r => r.json()).then(console.log),
          clearStorage: () => {
            localStorage.clear();
            sessionStorage.clear();
            console.log('Storage cleared');
          },
          persistentCart: () => window.debugCart && window.debugCart()
        };
        console.log('WTF Debug tools available: WTF_DEBUG');
      </script>
    {% endif %}

    <!-- 21+ Age Gate Banner -->
    {% render 'age-gate-banner' %}

  </body>
</html>
