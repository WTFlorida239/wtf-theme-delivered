name: Lighthouse Performance Audit

on:
  pull_request:
    branches: [ main, master ]
    paths:
      - 'assets/**'
      - 'sections/**'
      - 'templates/**'
      - 'layout/**'
      - 'snippets/**'
      - '.github/workflows/lighthouse.yml'

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  lighthouse:
    runs-on: ubuntu-latest
    name: Lighthouse Audit
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          npm install -g @lhci/cli lighthouse
          
      - name: Run Lighthouse CI
        id: lighthouse
        run: |
          # Create lighthouse config
          cat > lighthouserc.json << 'EOF'
          {
            "ci": {
              "collect": {
                "url": [
                  "https://wtfswag.com",
                  "https://wtfswag.com/pages/kava-drinks",
                  "https://wtfswag.com/pages/kratom-teas",
                  "https://wtfswag.com/collections/all"
                ],
                "numberOfRuns": 3,
                "settings": {
                  "chromeFlags": "--no-sandbox --headless",
                  "preset": "desktop",
                  "throttling": {
                    "rttMs": 40,
                    "throughputKbps": 10240,
                    "cpuSlowdownMultiplier": 1
                  }
                }
              },
              "assert": {
                "assertions": {
                  "categories:performance": ["error", {"minScore": 0.9}],
                  "categories:accessibility": ["error", {"minScore": 0.9}],
                  "categories:best-practices": ["error", {"minScore": 0.9}],
                  "categories:seo": ["error", {"minScore": 0.9}]
                }
              },
              "upload": {
                "target": "temporary-public-storage"
              }
            }
          }
          EOF
          
          # Run Lighthouse CI
          lhci autorun --config=lighthouserc.json || echo "lighthouse_failed=true" >> $GITHUB_OUTPUT
          
      - name: Parse Lighthouse Results
        id: parse_results
        run: |
          # Parse the latest lighthouse results
          if [ -d ".lighthouseci" ]; then
            LATEST_RUN=$(ls -t .lighthouseci/ | head -n 1)
            RESULTS_DIR=".lighthouseci/$LATEST_RUN"
            
            # Extract scores from manifest
            if [ -f "$RESULTS_DIR/manifest.json" ]; then
              PERFORMANCE=$(cat $RESULTS_DIR/manifest.json | jq -r '.[0].summary.performance // 0')
              ACCESSIBILITY=$(cat $RESULTS_DIR/manifest.json | jq -r '.[0].summary.accessibility // 0')
              BEST_PRACTICES=$(cat $RESULTS_DIR/manifest.json | jq -r '.[0].summary["best-practices"] // 0')
              SEO=$(cat $RESULTS_DIR/manifest.json | jq -r '.[0].summary.seo // 0')
              
              # Convert to percentage
              PERF_PERCENT=$(echo "$PERFORMANCE * 100" | bc -l | cut -d. -f1)
              A11Y_PERCENT=$(echo "$ACCESSIBILITY * 100" | bc -l | cut -d. -f1)
              BP_PERCENT=$(echo "$BEST_PRACTICES * 100" | bc -l | cut -d. -f1)
              SEO_PERCENT=$(echo "$SEO * 100" | bc -l | cut -d. -f1)
              
              echo "performance_score=$PERF_PERCENT" >> $GITHUB_OUTPUT
              echo "accessibility_score=$A11Y_PERCENT" >> $GITHUB_OUTPUT
              echo "best_practices_score=$BP_PERCENT" >> $GITHUB_OUTPUT
              echo "seo_score=$SEO_PERCENT" >> $GITHUB_OUTPUT
              
              # Check if any score is below 90
              if [ "$PERF_PERCENT" -lt 90 ] || [ "$A11Y_PERCENT" -lt 90 ] || [ "$BP_PERCENT" -lt 90 ] || [ "$SEO_PERCENT" -lt 90 ]; then
                echo "scores_below_threshold=true" >> $GITHUB_OUTPUT
              else
                echo "scores_below_threshold=false" >> $GITHUB_OUTPUT
              fi
            fi
          fi
          
      - name: Comment PR with Lighthouse Results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const performance = '${{ steps.parse_results.outputs.performance_score }}' || 'N/A';
            const accessibility = '${{ steps.parse_results.outputs.accessibility_score }}' || 'N/A';
            const bestPractices = '${{ steps.parse_results.outputs.best_practices_score }}' || 'N/A';
            const seo = '${{ steps.parse_results.outputs.seo_score }}' || 'N/A';
            const belowThreshold = '${{ steps.parse_results.outputs.scores_below_threshold }}' === 'true';
            
            const getScoreEmoji = (score) => {
              if (score === 'N/A') return '‚ùì';
              const num = parseInt(score);
              if (num >= 90) return '‚úÖ';
              if (num >= 70) return '‚ö†Ô∏è';
              return '‚ùå';
            };
            
            const comment = `## üîç Lighthouse Performance Audit
            
            | Category | Score | Status |
            |----------|-------|--------|
            | Performance | ${performance}% | ${getScoreEmoji(performance)} |
            | Accessibility | ${accessibility}% | ${getScoreEmoji(accessibility)} |
            | Best Practices | ${bestPractices}% | ${getScoreEmoji(bestPractices)} |
            | SEO | ${seo}% | ${getScoreEmoji(seo)} |
            
            ${belowThreshold ? 
              '‚ö†Ô∏è **Warning**: One or more scores are below the 90% threshold. Please review and optimize before merging.' : 
              'üéâ **Great job!** All Lighthouse scores meet the 90% threshold requirement.'
            }
            
            ### üìä Performance Recommendations
            - Optimize images with WebP format and proper sizing
            - Minimize CSS and JavaScript bundles
            - Implement proper lazy loading for below-the-fold content
            - Use efficient caching strategies
            - Optimize Core Web Vitals (LCP, FID, CLS)
            
            ### ‚ôø Accessibility Recommendations
            - Ensure proper ARIA labels and roles
            - Maintain sufficient color contrast ratios
            - Implement keyboard navigation support
            - Add alt text for all images
            - Use semantic HTML elements
            
            ---
            *Lighthouse audit performed on: ${new Date().toISOString()}*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
            
      - name: Create Issue for Low Scores
        if: steps.parse_results.outputs.scores_below_threshold == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const performance = '${{ steps.parse_results.outputs.performance_score }}';
            const accessibility = '${{ steps.parse_results.outputs.accessibility_score }}';
            const bestPractices = '${{ steps.parse_results.outputs.best_practices_score }}';
            const seo = '${{ steps.parse_results.outputs.seo_score }}';
            
            const lowScores = [];
            if (parseInt(performance) < 90) lowScores.push(`Performance: ${performance}%`);
            if (parseInt(accessibility) < 90) lowScores.push(`Accessibility: ${accessibility}%`);
            if (parseInt(bestPractices) < 90) lowScores.push(`Best Practices: ${bestPractices}%`);
            if (parseInt(seo) < 90) lowScores.push(`SEO: ${seo}%`);
            
            const issueTitle = `üö® Lighthouse Scores Below Threshold - ${new Date().toISOString().split('T')[0]}`;
            const issueBody = `## Lighthouse Performance Alert
            
            The following Lighthouse scores are below the 90% threshold:
            
            ${lowScores.map(score => `- ‚ùå ${score}`).join('\n')}
            
            ### Immediate Actions Required:
            1. **Performance Optimization**
               - Audit and optimize largest contentful paint (LCP)
               - Reduce first input delay (FID)
               - Minimize cumulative layout shift (CLS)
               - Optimize images and assets
            
            2. **Accessibility Improvements**
               - Review ARIA labels and semantic HTML
               - Test keyboard navigation
               - Verify color contrast ratios
               - Add missing alt text
            
            3. **Best Practices Review**
               - Update deprecated APIs
               - Implement proper security headers
               - Optimize third-party scripts
               - Review console errors
            
            4. **SEO Enhancements**
               - Validate meta tags and structured data
               - Improve page titles and descriptions
               - Optimize heading hierarchy
               - Check internal linking structure
            
            ### Related PR: #${{ github.event.number }}
            
            **Priority**: High
            **Assignee**: Performance Team
            **Due Date**: Within 48 hours
            
            ---
            *Auto-generated by Lighthouse CI on ${new Date().toISOString()}*`;
            
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: issueTitle,
              body: issueBody,
              labels: ['performance', 'lighthouse', 'high-priority']
            });
            
      - name: Fail if scores below threshold
        if: steps.parse_results.outputs.scores_below_threshold == 'true'
        run: |
          echo "‚ùå Lighthouse scores below 90% threshold detected"
          echo "Performance: ${{ steps.parse_results.outputs.performance_score }}%"
          echo "Accessibility: ${{ steps.parse_results.outputs.accessibility_score }}%"
          echo "Best Practices: ${{ steps.parse_results.outputs.best_practices_score }}%"
          echo "SEO: ${{ steps.parse_results.outputs.seo_score }}%"
          echo ""
          echo "Please optimize the theme before merging this PR."
          exit 1
