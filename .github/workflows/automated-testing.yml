name: CI – Theme, Tests & Perf

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main, develop ]
  schedule:
    - cron: '0 */6 * * *' # every 6h
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

# Minimal permissions for PR status + comments
permissions:
  contents: read
  pull-requests: write

jobs:
  theme-check:
    name: Theme Check (official)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      # Use Shopify's maintained action (v2)
      - name: Run Theme Check
        uses: shopify/theme-check-action@v2
        with:
          theme_root: '.'         # change if your theme lives in a subfolder
          base: main              # compares PR against main for annotations
          token: ${{ github.token }}

  unit-tests:
    name: Unit Tests (Node, if present)
    runs-on: ubuntu-latest
    needs: theme-check
    if: hashFiles('package.json') != ''
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install
        run: npm ci
      - name: Test (non-interactive)
        run: |
          if npm run | grep -qE '(^|\s)test(\s|:)'; then
            npm test --if-present -- --ci
          else
            echo "⏭️ No test script; skipping"
          fi

  functional-smoke:
    name: Functional Smoke Checks (files only)
    runs-on: ubuntu-latest
    needs: theme-check
    steps:
      - uses: actions/checkout@v4
      - name: Run smoke checks
        shell: bash
        run: |
          set -Eeuo pipefail
          pass=0; warn=0; fail=0
          ok(){ echo "✅ $1"; pass=$((pass+1)); }
          ww(){ echo "⚠️  $1"; warn=$((warn+1)); }
          ff(){ echo "❌ $1"; fail=$((fail+1)); }

          [ -f "sections/main-product.liquid" ] && ok "main-product.liquid present" || ff "Missing sections/main-product.liquid"
          ([ -f "templates/cart.json" ] || [ -f "templates/cart.liquid" ]) && ok "Cart template present" || ff "Missing cart template"
          [ -f "templates/product.json" ] && ok "Product template present" || ff "Missing templates/product.json"

          # Optional cart UI section (warn only)
          ( for f in sections/wtf-cart.liquid sections/cart-drawer.liquid sections/main-cart-items.liquid sections/cart.liquid; do
              [ -f "$f" ] && { ok "Cart section found: $f"; exit 0; }
            done
            ww "No cart section found (ok if using app blocks only)"
          )

          # Ensure Product JSON-LD is still emitted somewhere
          ( grep -R --line-number -E "schema-product|application/json[^>]*ld\+json" sections/ snippets/ 2>/dev/null \
            && ok "Product schema reference found" ) || ww "No obvious Product schema; confirm JSON-LD in main-product or snippet"

          printf "passes=%s\nwarnings=%s\nfailures=%s\n" "$pass" "$warn" "$fail" | tee functional-summary.txt
          [ "$fail" -eq 0 ] || { echo "Functional smoke failed"; exit 1; }

      - name: Upload smoke results
        uses: actions/upload-artifact@v4
        with:
          name: functional-smoke-results
          path: functional-summary.txt
          retention-days: 14

  perf-snapshot:
    name: Performance Snapshot (scheduled-only)
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4
      - name: Collect asset metrics
        shell: bash
        run: |
          set -Eeuo pipefail
          mkdir -p perf
          find assets -type f -name "*.css" -exec ls -lh {} \; | awk '{print $5 " " $9}' > perf/css-sizes.txt || true
          find assets -type f -name "*.js"  -exec ls -lh {} \; | awk '{print $5 " " $9}' > perf/js-sizes.txt  || true
          find assets -type f \( -name "*.jpg" -o -name "*.jpeg" -o -name "*.png" -o -name "*.gif" -o -name "*.svg" -o -name "*.webp" \) \
            -exec ls -lh {} \; | awk '{print $5 " " $9}' > perf/img-sizes.txt || true
          echo "Liquid lines: $(find . -name '*.liquid' -exec wc -l {} \; | awk '{s+=$1} END{print s+0}')" > perf/liquid-lines.txt
      - name: Upload perf snapshot
        uses: actions/upload-artifact@v4
        with:
          name: perf-snapshot
          path: perf/
          retention-days: 14

  summary:
    name: CI Summary
    runs-on: ubuntu-latest
    if: always()
    needs: [theme-check, unit-tests, functional-smoke, perf-snapshot]
    steps:
      - name: Build summary
        shell: bash
        run: |
          cat > summary.md <<'EOF'
          # CI Summary

          **Theme Check:**  ${{ needs.theme-check.result }}
          **Unit Tests:**   ${{ needs.unit-tests.result || 'skipped' }}
          **Smoke Checks:** ${{ needs.functional-smoke.result }}
          **Perf (sched):** ${{ needs.perf-snapshot.result || 'skipped' }}

          Next:
          - Fix Theme Check errors before merging
          - Keep Product JSON-LD present on product pages (for rich results)
          EOF
      - uses: actions/upload-artifact@v4
        with:
          name: ci-summary
          path: summary.md
          retention-days: 30
