name: WTF Theme CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  SHOPIFY_CLI_THEME_TOKEN: ${{ secrets.SHOPIFY_CLI_THEME_TOKEN }}
  SHOPIFY_STORE: wtfswag.myshopify.com

jobs:
  validate:
    name: Theme Validation & Testing
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Shopify CLI
      run: npm install -g @shopify/cli @shopify/theme
      
    - name: Run conflict scan
      run: npm run conflicts:scan
      
    - name: Run competitor audit
      run: npm run competitors:audit
      
    - name: Run order readiness check
      run: node scripts/order-readiness-check.js
      
    - name: Shopify theme check
      run: shopify theme check --fail-level=error
      
    - name: Validate theme structure
      run: |
        echo "Validating required theme files..."
        required_files=(
          "layout/theme.liquid"
          "config/settings_schema.json"
          "sections/main-product.liquid"
          "sections/wtf-cart.liquid"
          "sections/enhanced-drink-builder.liquid"
          "templates/product.json"
          "templates/cart.liquid"
        )
        
        for file in "${required_files[@]}"; do
          if [ ! -f "$file" ]; then
            echo "❌ Missing required file: $file"
            exit 1
          else
            echo "✅ Found: $file"
          fi
        done
        
    - name: Upload validation results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: validation-results
        path: |
          docs/
          *.md
          cleanup_log_*.txt
        retention-days: 30

  lighthouse-audit:
    name: Performance Audit
    runs-on: ubuntu-latest
    needs: validate
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Install Lighthouse CI
      run: npm install -g @lhci/cli
      
    - name: Run Lighthouse audit
      run: |
        echo "Running Lighthouse audit simulation..."
        # In a real scenario, this would audit the deployed theme
        # For now, we'll create a mock report
        mkdir -p lighthouse-results
        echo '{"performance": 92, "accessibility": 96, "bestPractices": 88, "seo": 94}' > lighthouse-results/summary.json
        
    - name: Upload Lighthouse results
      uses: actions/upload-artifact@v4
      with:
        name: lighthouse-results
        path: lighthouse-results/
        retention-days: 30

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: validate
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run security audit
      run: |
        echo "Running security scan..."
        
        # Check for hardcoded secrets
        echo "Checking for hardcoded secrets..."
        if grep -r "shpat_" . --exclude-dir=.git --exclude="*.yml" --exclude="*.yaml"; then
          echo "❌ Found potential hardcoded Shopify tokens"
          exit 1
        fi
        
        # Check for unsafe Liquid code
        echo "Checking for unsafe Liquid patterns..."
        unsafe_patterns=(
          "| raw"
          "assign.*request\."
          "assign.*params\."
        )
        
        for pattern in "${unsafe_patterns[@]}"; do
          if grep -r "$pattern" . --include="*.liquid"; then
            echo "⚠️ Found potentially unsafe Liquid pattern: $pattern"
          fi
        done
        
        # Check file permissions
        echo "Checking file permissions..."
        find . -type f -perm /111 -not -path "./.git/*" -not -name "*.sh" | while read file; do
          echo "⚠️ Executable file found: $file"
        done
        
        echo "✅ Security scan completed"

  notify:
    name: Notification
    runs-on: ubuntu-latest
    needs: [validate, lighthouse-audit, security-scan]
    if: always()
    
    steps:
    - name: Notify on success
      if: needs.validate.result == 'success'
      run: |
        echo "✅ WTF Theme validation passed successfully!"
        echo "Theme is ready for deployment to staging/production"
        
    - name: Notify on failure
      if: needs.validate.result == 'failure'
      run: |
        echo "❌ WTF Theme validation failed!"
        echo "Please check the validation results and fix issues before deployment"
        exit 1
