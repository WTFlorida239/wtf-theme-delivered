{%- comment -%}
  Central SEO & Social Head Meta System (MAX)

  Usage: {% render 'seo-head' %}

  Includes:
  - Dynamic <title> / meta description
  - Canonical + hreflang (Markets/locales)
  - Robots (utility pages + pagination)
  - Open Graph + Twitter (with locale alternates)
  - Geo/local metas
  - JSON-LD:
      * Organization
      * LocalBusiness (homepage or when address is present)
      * WebSite + SearchAction
      * BreadcrumbList
      * Product (with Offers, brand, GTIN/SKU, AggregateRating if available)
      * Collection as ItemList
      * Article (BlogPosting)
      * FAQPage (only when FAQ data exists)
  Notes:
  - Uses shop/settings/metafields when available; falls back sanely.
  - Avoids duplicate robots; schema blocks are uniquely typed to reduce duplication risk.
{%- endcomment -%}

{%- liquid
  ############################
  # TITLE
  ############################
  assign page_title = page_title | default: shop.name

  if template.name == 'index'
    assign page_title = "Cape Coral's Premier Kava Bar | " | append: shop.name | append: " | Best Kava Drinks & Kratom Teas in Southwest Florida"
  elsif template.name contains 'product'
    assign page_title = product.title | append: " | " | append: shop.name
    if product.metafields.seo.title != blank
      assign page_title = product.metafields.seo.title
    endif
  elsif template.name contains 'collection'
    assign page_title = collection.title | append: " | " | append: shop.name
    if collection.metafields.seo.title != blank
      assign page_title = collection.metafields.seo.title
    endif
  elsif template.name contains 'article'
    assign page_title = article.title | append: " | " | append: shop.name | append: " Blog"
  elsif template.name contains 'page'
    assign page_title = page.title | append: " | " | append: shop.name
    if page.metafields.seo.title != blank
      assign page_title = page.metafields.seo.title
    endif
  endif

  # Conservative truncate to avoid SERP truncation on narrow devices
  if page_title and page_title.size > 60
    assign page_title = page_title | truncate: 60, '...'
  endif

  ############################
  # DESCRIPTION
  ############################
  assign meta_desc_source = page_description | default: shop.description | strip_html | strip
  assign meta_desc = meta_desc_source

  if template.name == 'index'
    assign meta_desc = "Cape Coral's premier kava bar offering custom kava drinks, kratom teas, THC beverages, and sober nightlife. Located at 1520 SE 46th Ln, serving Cape Coral, Fort Myers, and Southwest Florida."
  elsif template.name contains 'product'
    if product.metafields.seo.description != blank
      assign meta_desc = product.metafields.seo.description
    elsif product.description != blank
      assign meta_desc = product.description
    endif
  elsif template.name contains 'collection'
    if collection.metafields.seo.description != blank
      assign meta_desc = collection.metafields.seo.description
    elsif collection.description != blank
      assign meta_desc = collection.description
    endif
  elsif template.name contains 'article'
    if article.excerpt != blank
      assign meta_desc = article.excerpt
    elsif article.content != blank
      assign meta_desc = article.content
    endif
  elsif template.name contains 'page'
    if page.metafields.seo.description != blank
      assign meta_desc = page.metafields.seo.description
    elsif page.content != blank
      assign meta_desc = page.content
    endif
  endif

  assign meta_desc_base = meta_desc | strip_html | strip | strip_newlines | replace: '  ', ' ' | replace: '  ', ' ' | replace: '  ', ' '
  assign meta_desc_truncated = meta_desc_base | truncate: 160, ''
  assign meta_desc_words = meta_desc_truncated | split: ' '
  assign meta_desc_builder = ''
  for meta_word in meta_desc_words
    assign meta_word_clean = meta_word | strip
    if meta_word_clean == ''
      continue
    endif
    if meta_desc_builder == ''
      assign candidate_desc = meta_word_clean
    else
      assign candidate_desc = meta_desc_builder | append: ' ' | append: meta_word_clean
    endif
    if candidate_desc.size > 155
      break
    endif
    assign meta_desc_builder = candidate_desc
  endfor
  if meta_desc_builder == ''
    assign meta_desc = meta_desc_base | truncate: 155
  else
    if meta_desc_builder.size < meta_desc_base.size
      assign meta_desc = meta_desc_builder | append: 'â€¦'
    else
      assign meta_desc = meta_desc_builder
    endif
  endif

  ############################
  # ROBOTS
  ############################
  assign robots_content = "index,follow"

  assign is_utility_page = false
  if template.name == 'search'
    assign is_utility_page = true
  elsif template.name == 'cart'
    assign is_utility_page = true
  elsif template.name contains 'customers'
    assign is_utility_page = true
  elsif request.path contains '/policies'
    assign is_utility_page = true
  elsif request.path == '/challenge'
    assign is_utility_page = true
  elsif request.path contains '/tools'
    assign is_utility_page = true
  elsif template.name == 'gift_card'
    assign is_utility_page = true
  elsif template.name == 'list-collections'
    assign is_utility_page = true
  endif

  if template.suffix == 'noindex'
    assign is_utility_page = true
  endif

  if is_utility_page
    assign robots_content = "noindex,follow"
  endif

  if current_page and current_page > 1
    assign robots_content = "noindex,follow"
  endif

  ############################
  # SOCIAL IMAGE
  ############################
  assign og_img = settings.og_default
  if og_img == blank
    assign og_img = settings.logo
  endif
  if template.name contains 'product' and product.featured_image
    assign og_img = product.featured_image
  elsif template.name contains 'collection' and collection.image
    assign og_img = collection.image
  elsif template.name contains 'article' and article.image
    assign og_img = article.image
  endif

  ############################
  # DATA FOR JSON-LD (common)
  ############################
  # Address pieces (prefer shop metafields if present, then settings)
  assign addr_line1  = shop.metafields.wtf.address.line1 | default: settings.store_address_1
  assign addr_line2  = shop.metafields.wtf.address.line2 | default: settings.store_address_2
  assign addr_city   = shop.metafields.wtf.address.city  | default: settings.store_city
  assign addr_region = shop.metafields.wtf.address.region | default: settings.store_state
  assign addr_zip    = shop.metafields.wtf.address.postalCode | default: settings.store_zip
  assign addr_country= shop.metafields.wtf.address.country | default: 'US'

  assign phone_main  = shop.metafields.wtf.phone | default: settings.store_phone | default: shop.phone
  assign email_main  = shop.metafields.wtf.email | default: settings.store_email | default: shop.customer_email | default: shop.email

  # Coordinates (Cape Coral defaults)
  assign lat = shop.metafields.wtf.location.latitude  | default: 26.5629
  assign lng = shop.metafields.wtf.location.longitude | default: -81.9495

  # Social "sameAs" links from metafields if present
  assign same_as = ''
  if shop.metafields.social.instagram != blank
    assign same_as = same_as | append: shop.metafields.social.instagram | append: '||'
  endif
  if shop.metafields.social.facebook != blank
    assign same_as = same_as | append: shop.metafields.social.facebook | append: '||'
  endif
  if shop.metafields.social.twitter != blank
    assign same_as = same_as | append: shop.metafields.social.twitter | append: '||'
  endif
  if shop.metafields.social.youtube != blank
    assign same_as = same_as | append: shop.metafields.social.youtube | append: '||'
  endif
  if shop.metafields.social.tiktok != blank
    assign same_as = same_as | append: shop.metafields.social.tiktok | append: '||'
  endif

  assign same_links = same_as | split: '||'
  capture same_as_json
  endcapture
  for social_link in same_links
    assign social_trimmed = social_link | strip
    if social_trimmed == ''
      continue
    endif
    capture same_as_json
      {{ same_as_json }}{% unless same_as_json == '' %},{% endunless %}{{ social_trimmed | json }}
    endcapture
  endfor

  assign same_as_json = same_as_json | strip

  assign twitter_site_handle = shop.metafields.social.twitter_handle
  if twitter_site_handle != blank
    assign twitter_site_handle = twitter_site_handle | strip
  endif
  if twitter_site_handle != blank and twitter_site_handle contains '@'
    assign twitter_site_handle = twitter_site_handle | remove: '@'
  endif

  # Opening hours (expects a metafield JSON or text like "Mon-Fri 08:00-22:00")
  assign hours_struct = shop.metafields.wtf.hours.value
  assign default_hours_json = '{"monday":{"open":"08:00","close":"22:00"},"tuesday":{"open":"08:00","close":"22:00"},"wednesday":{"open":"08:00","close":"22:00"},"thursday":{"open":"08:00","close":"22:00"},"friday":{"open":"08:00","close":"23:00"},"saturday":{"open":"08:00","close":"23:00"},"sunday":{"open":"10:00","close":"22:00"}}'
  if hours_struct == blank
    assign hours_struct = default_hours_json | parse_json
  endif

  assign hours_days = 'monday|tuesday|wednesday|thursday|friday|saturday|sunday' | split: '|'
  assign opening_hours_spec = ''
  for day_key in hours_days
    assign hours_entry = hours_struct[day_key]
    assign open_time = hours_entry.open | default: hours_entry.opens
    assign close_time = hours_entry.close | default: hours_entry.closes
    assign closed_flag = hours_entry.closed | default: hours_entry.is_closed

    if closed_flag == true or closed_flag == 'true'
      continue
    endif

    if open_time == blank or close_time == blank
      continue
    endif

    if open_time == 'Closed' or close_time == 'Closed'
      continue
    endif

    case day_key
      when 'monday'
        assign schema_day = 'Monday'
      when 'tuesday'
        assign schema_day = 'Tuesday'
      when 'wednesday'
        assign schema_day = 'Wednesday'
      when 'thursday'
        assign schema_day = 'Thursday'
      when 'friday'
        assign schema_day = 'Friday'
      when 'saturday'
        assign schema_day = 'Saturday'
      when 'sunday'
        assign schema_day = 'Sunday'
    endcase

    capture opening_hours_spec
      {{ opening_hours_spec }}{% unless opening_hours_spec == '' %},{% endunless %}{
        "@type": "OpeningHoursSpecification",
        "dayOfWeek": "https://schema.org/{{ schema_day }}",
        "opens": "{{ open_time }}",
        "closes": "{{ close_time }}"
      }
    endcapture
  endfor

  assign opening_hours_spec = opening_hours_spec | strip

  # Product identifiers (optional)
  assign gtin_field = product.metafields.seo.gtin | default: product.selected_or_first_available_variant.barcode
  assign sku_field  = product.selected_or_first_available_variant.sku | default: product.sku

  # Aggregate rating (optional metafields)
  assign rating_value = product.metafields.reviews.rating_value
  assign rating_count = product.metafields.reviews.rating_count

  if product
    assign primary_variant = product.selected_or_first_available_variant
    assign primary_variant_price = primary_variant.price | default: product.price
    assign primary_variant_available = primary_variant.available | default: product.available
  endif

  assign locale_fallback = request.locale.iso_code | default: shop.primary_locale.iso_code | default: 'en-US'
  assign locale_clean = locale_fallback | replace: '_', '-' | downcase
  assign locale_parts = locale_clean | split: '-'
  assign locale_lang = locale_parts[0]
  assign locale_region = locale_parts[1] | default: '' | upcase
  if locale_region != ''
    assign og_locale_value = locale_lang | append: '_' | append: locale_region
  else
    assign og_locale_value = locale_lang
  endif
-%}

{%- comment %} Title & Description {%- endcomment -%}
<title>{{ page_title }}</title>
<meta name="description" content="{{ meta_desc | escape }}">

{%- comment %} Canonical URL {%- endcomment -%}
<link rel="canonical" href="{{ canonical_url }}">

{%- comment -%} Hreflang alternates (Markets/locales) {%- endcomment -%}
{%- if shop.published_locales and shop.published_locales.size > 1 -%}
  {%- for locale in shop.published_locales -%}
    <link rel="alternate"
          hreflang="{{ locale.iso_code | replace: '_','-' | downcase }}"
          href="{{ canonical_url | within: locale }}">
  {%- endfor -%}
  <link rel="alternate"
        hreflang="x-default"
        href="{{ canonical_url | within: shop.primary_locale }}">
{%- endif -%}

{%- comment %} Robots (single source of truth) {%- endcomment -%}
<meta name="robots" content="{{ robots_content }}">

{%- comment %} Geo/Local Meta Tags {%- endcomment -%}
<meta name="geo.region" content="US-FL">
<meta name="geo.placename" content="Cape Coral">
<meta name="geo.position" content="{{ lat }};{{ lng }}">
<meta name="ICBM" content="{{ lat }}, {{ lng }}">

{%- comment %} Open Graph {%- endcomment -%}
<meta property="og:site_name" content="{{ shop.name }}">
<meta property="og:title" content="{{ page_title }}">
<meta property="og:description" content="{{ meta_desc | escape }}">
<meta property="og:url" content="{{ canonical_url }}">
<meta property="og:type" content="{% if template.name contains 'product' %}product{% elsif template.name contains 'article' %}article{% else %}website{% endif %}">
<meta property="og:locale" content="{{ og_locale_value }}">
{%- if shop.published_locales and shop.published_locales.size > 1 -%}
  {%- for locale in shop.published_locales -%}
    {%- assign locale_option = locale.iso_code | replace: '_', '-' | downcase -%}
    {%- assign locale_parts = locale_option | split: '-' -%}
    {%- assign alt_lang = locale_parts[0] -%}
    {%- assign alt_region = locale_parts[1] | default: '' | upcase -%}
    {%- if alt_region != '' -%}
      {%- assign og_locale_alt = alt_lang | append: '_' | append: alt_region -%}
    {%- else -%}
      {%- assign og_locale_alt = alt_lang -%}
    {%- endif -%}
    <meta property="og:locale:alternate" content="{{ og_locale_alt }}">
  {%- endfor -%}
{%- endif -%}

{%- if template.name contains 'product' -%}
  <meta property="product:price:amount" content="{{ primary_variant_price | default: product.price | money_without_currency }}">
  <meta property="product:price:currency" content="{{ shop.currency }}">
  <meta property="product:availability" content="{% if primary_variant_available %}in stock{% else %}out of stock{% endif %}">
  <meta property="product:brand" content="{{ product.vendor | default: shop.name }}">
{%- endif -%}

{%- comment %} OG Image (1200x630 for social) {%- endcomment -%}
{%- if og_img -%}
  <meta property="og:image" content="{{ og_img | image_url: width: 1200, height: 630, crop: 'center' }}">
  <meta property="og:image:width" content="1200">
  <meta property="og:image:height" content="630">
  <meta property="og:image:alt" content="{{ page_title | escape }}">
  <meta property="og:image:secure_url" content="{{ og_img | image_url: width: 1200, height: 630, crop: 'center' }}">
{%- endif -%}

{%- comment %} Twitter Cards {%- endcomment -%}
<meta name="twitter:card" content="summary_large_image">
<meta name="twitter:title" content="{{ page_title }}">
<meta name="twitter:description" content="{{ meta_desc | escape }}">
{%- if twitter_site_handle != blank -%}
  <meta name="twitter:site" content="@{{ twitter_site_handle }}">
{%- endif -%}
{%- if og_img -%}
  <meta name="twitter:image" content="{{ og_img | image_url: width: 1200, height: 630, crop: 'center' }}">
  <meta name="twitter:image:alt" content="{{ page_title | escape }}">
{%- endif -%}

{%- comment %} Alternate for Mobile (optional) {%- endcomment -%}
<link rel="alternate" media="only screen and (max-width: 640px)" href="{{ canonical_url }}">

{%- comment -%}
  Preconnects are fine here; keep fast path for fonts/CDN
{%- endcomment -%}
<link rel="preconnect" href="https://cdn.shopify.com" crossorigin>
<link rel="preconnect" href="https://fonts.googleapis.com" crossorigin>
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>

{%- comment -%}
  ============================
  JSON-LD BLOCKS (MAX)
  ============================
{%- endcomment -%}

{%- comment -%} Organization {%- endcomment -%}
<script type="application/ld+json" id="ld-org">
{
  "@context": "https://schema.org",
  "@type": "Organization",
  "@id": {{ shop.url | append: '#organization' | json }},
  "name": {{ shop.name | json }},
  "url": {{ shop.url | json }},
  "inLanguage": {{ locale_fallback | replace: '_', '-' | json }},
  {% if settings.logo != blank %}
  "logo": {{ settings.logo | image_url: width: 600 | json }},
  {% endif %}
  {% if email_main != blank %}"email": {{ email_main | json }},{% endif %}
  {% if phone_main != blank %}"telephone": {{ phone_main | json }},{% endif %}
  "sameAs": [{% if same_as_json != '' %}{{ same_as_json }}{% endif %}]
}
</script>

{%- comment -%} LocalBusiness (show on home or whenever address known) {%- endcomment -%}
{%- if addr_line1 != blank and addr_city != blank and phone_main != blank -%}
<script type="application/ld+json" id="ld-localbusiness">
{
  "@context": "https://schema.org",
  "@type": "BarOrPub",
  "@id": {{ shop.url | append: '#localbusiness' | json }},
  "name": {{ shop.name | json }},
  "image": [{% if settings.og_default != blank %}{{ settings.og_default | image_url: width: 1200 | json }}{% else %}{{ settings.logo | image_url: width: 600 | json }}{% endif %}],
  "url": {{ shop.url | json }},
  "telephone": {{ phone_main | json }},
  "inLanguage": {{ locale_fallback | replace: '_', '-' | json }},
  {% if email_main != blank %}"email": {{ email_main | json }},{% endif %}
  "address": {
    "@type": "PostalAddress",
    "streetAddress": {{ addr_line1 | append: ' ' | append: (addr_line2 | default: '') | strip | json }},
    "addressLocality": {{ addr_city | json }},
    "addressRegion": {{ addr_region | json }},
    "postalCode": {{ addr_zip | json }},
    "addressCountry": {{ addr_country | json }}
  },
  "geo": { "@type": "GeoCoordinates", "latitude": {{ lat }}, "longitude": {{ lng }} },
  {% if opening_hours_spec != '' %}
  "openingHoursSpecification": [{{ opening_hours_spec }}],
  {% endif %}
  {% if same_as_json != '' %}
  "sameAs": [{{ same_as_json }}],
  {% endif %}
  "parentOrganization": { "@id": {{ shop.url | append: '#organization' | json }} },
  "priceRange": "$$"
}
</script>
{%- endif -%}

{%- comment -%} WebSite + SearchAction (enhanced with query suggestions) {%- endcomment -%}
<script type="application/ld+json" id="ld-website">
{
  "@context": "https://schema.org",
  "@type": "WebSite",
  "@id": {{ shop.url | append: '#website' | json }},
  "name": {{ shop.name | json }},
  "url": {{ shop.url | json }},
  "inLanguage": {{ locale_fallback | replace: '_', '-' | json }},
  "potentialAction": {
    "@type": "SearchAction",
    "target": {
      "@type": "EntryPoint",
      "urlTemplate": {{ shop.url | append: "/search?q={search_term_string}" | json }}
    },
    "query-input": "required name=search_term_string"
  }
}
</script>

{%- comment -%} BreadcrumbList (contextual) {%- endcomment -%}
{%- capture breadcrumb_items -%}{%- endcapture -%}
{%- assign crumb_index = 1 -%}
{%- capture breadcrumb_items -%}
{
  "@type": "ListItem",
  "position": {{ crumb_index }},
  "name": "Home",
  "item": {{ shop.url | json }}
}
{%- endcapture -%}
{%- assign crumb_index = crumb_index | plus: 1 -%}

{%- if template.name contains 'collection' and collection -%}
  {%- capture breadcrumb_items -%}
    {{ breadcrumb_items }},
    {
      "@type": "ListItem",
      "position": {{ crumb_index }},
      "name": {{ collection.title | json }},
      "item": {{ shop.url | append: collection.url | json }}
    }
  {%- endcapture -%}
  {%- assign crumb_index = crumb_index | plus: 1 -%}
{%- endif -%}

{%- if template.name contains 'product' and product -%}
  {%- if collection and collection.title -%}
    {%- capture breadcrumb_items -%}
      {{ breadcrumb_items }},
      {
        "@type": "ListItem",
        "position": {{ crumb_index }},
        "name": {{ collection.title | json }},
        "item": {{ shop.url | append: collection.url | json }}
      }
    {%- endcapture -%}
    {%- assign crumb_index = crumb_index | plus: 1 -%}
  {%- endif -%}
  {%- capture breadcrumb_items -%}
    {{ breadcrumb_items }},
    {
      "@type": "ListItem",
      "position": {{ crumb_index }},
      "name": {{ product.title | json }},
      "item": {{ shop.url | append: product.url | json }}
    }
  {%- endcapture -%}
  {%- assign crumb_index = crumb_index | plus: 1 -%}
{%- endif -%}

{%- if template.name contains 'article' and article -%}
  {%- capture breadcrumb_items -%}
    {{ breadcrumb_items }},
    {
      "@type": "ListItem",
      "position": {{ crumb_index }},
      "name": {{ article.title | json }},
      "item": {{ shop.url | append: article.url | json }}
    }
  {%- endcapture -%}
  {%- assign crumb_index = crumb_index | plus: 1 -%}
{%- endif -%}

{%- if template.name contains 'page' and page -%}
  {%- capture breadcrumb_items -%}
    {{ breadcrumb_items }},
    {
      "@type": "ListItem",
      "position": {{ crumb_index }},
      "name": {{ page.title | json }},
      "item": {{ shop.url | append: page.url | json }}
    }
  {%- endcapture -%}
  {%- assign crumb_index = crumb_index | plus: 1 -%}
{%- endif -%}

<script type="application/ld+json" id="ld-breadcrumbs">
{
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  "@id": {{ shop.url | append: '#breadcrumbs' | json }},
  "inLanguage": {{ locale_fallback | replace: '_', '-' | json }},
  "itemListElement": [{{ breadcrumb_items }}]
}
</script>

{%- comment -%} Product {%- endcomment -%}
{%- if template.name contains 'product' and product -%}
<script type="application/ld+json" id="ld-product">
{
  "@context": "https://schema.org",
  "@type": "Product",
  "@id": {{ shop.url | append: product.url | append: '#product' | json }},
  "name": {{ product.title | json }},
  "description": {{ product.description | strip_html | strip | truncate: 500 | json }},
  {% if product.featured_image %}
  "image": [{{ product.featured_image | image_url: width: 1200 | json }}],
  {% endif %}
  "inLanguage": {{ locale_fallback | replace: '_', '-' | json }},
  "mainEntityOfPage": { "@type": "WebPage", "@id": {{ shop.url | append: product.url | json }} },
  {% if product.vendor %}"brand": { "@type": "Brand", "name": {{ product.vendor | json }} },{% endif %}
  {% if gtin_field %}"gtin13": {{ gtin_field | json }},{% endif %}
  {% if sku_field %}"sku": {{ sku_field | json }},{% endif %}
  "url": {{ shop.url | append: product.url | json }},
  {% if rating_value and rating_count %}
  "aggregateRating": {
    "@type": "AggregateRating",
    "ratingValue": {{ rating_value }},
    "reviewCount": {{ rating_count }}
  },
  {% endif %}
  "offers": {
    "@type": "Offer",
    "priceCurrency": {{ shop.currency | json }},
    "price": {{ primary_variant_price | default: product.price | money_without_currency | json }},
    "url": {{ shop.url | append: product.url | json }},
    "availability": "{% if primary_variant_available %}https://schema.org/InStock{% else %}https://schema.org/OutOfStock{% endif %}",
    "itemCondition": "https://schema.org/NewCondition",
    "seller": { "@type": "Organization", "@id": {{ shop.url | append: '#organization' | json }} }
  }
}
</script>
{%- endif -%}

{%- comment -%} Collection as ItemList {%- endcomment -%}
{%- if template.name contains 'collection' and collection -%}
<script type="application/ld+json" id="ld-collection">
{
  "@context": "https://schema.org",
  "@type": "ItemList",
  "name": {{ collection.title | json }},
  "url": {{ shop.url | append: collection.url | json }},
  "inLanguage": {{ locale_fallback | replace: '_', '-' | json }},
  "numberOfItems": {{ collection.products_count }},
  "itemListElement": [
    {%- for prod in collection.products limit: 24 -%}
      {
        "@type": "ListItem",
        "position": {{ forloop.index }},
        "url": {{ shop.url | append: prod.url | json }},
        "name": {{ prod.title | json }}
      }{% unless forloop.last %},{% endunless %}
    {%- endfor -%}
  ]
}
</script>
{%- endif -%}

{%- comment -%} Article (BlogPosting) {%- endcomment -%}
{%- if template.name contains 'article' and article -%}
<script type="application/ld+json" id="ld-article">
{
  "@context": "https://schema.org",
  "@type": "BlogPosting",
  "@id": {{ shop.url | append: article.url | append: '#article' | json }},
  "headline": {{ article.title | json }},
  "description": {{ meta_desc | json }},
  "url": {{ shop.url | append: article.url | json }},
  "inLanguage": {{ locale_fallback | replace: '_', '-' | json }},
  "mainEntityOfPage": { "@type": "WebPage", "@id": {{ shop.url | append: article.url | json }} },
  {% if article.image %}"image": [{{ article.image | image_url: width: 1200 | json }}],{% endif %}
  "datePublished": {{ article.published_at | date: "%Y-%m-%dT%H:%M:%S%:z" | json }},
  "dateModified": {{ article.updated_at | date: "%Y-%m-%dT%H:%M:%S%:z" | json }},
  "author": {
    "@type": "Person",
    "name": {{ article.author | json }}
  },
  "publisher": {
    "@type": "Organization",
    "@id": {{ shop.url | append: '#organization' | json }},
    "name": {{ shop.name | json }}{% if settings.logo %},
    "logo": { "@type": "ImageObject", "url": {{ settings.logo | image_url: width: 600 | json }} }{% endif %}
  }
}
</script>
{%- endif -%}

{%- comment -%} FAQPage (only when FAQ data exists and is visible on page) {%- endcomment -%}
{%- assign faq_items = nil -%}
{%- if template.name contains 'product' and product.metafields.faq.items != blank -%}
  {%- assign faq_items = product.metafields.faq.items -%}
{%- elsif template.name contains 'page' and page.metafields.faq.items != blank -%}
  {%- assign faq_items = page.metafields.faq.items -%}
{%- endif -%}

{%- if faq_items and faq_items.size > 0 -%}
<script type="application/ld+json" id="ld-faq">
{
  "@context": "https://schema.org",
  "@type": "FAQPage",
  "inLanguage": {{ locale_fallback | replace: '_', '-' | json }},
  "mainEntity": [
    {%- for qa in faq_items -%}
      {
        "@type": "Question",
        "name": {{ qa.question | default: qa.q | json }},
        "acceptedAnswer": {
          "@type": "Answer",
          "text": {{ qa.answer | default: qa.a | json }}
        }
      }{% unless forloop.last %},{% endunless %}
    {%- endfor -%}
  ]
}
</script>
{%- endif -%}
