{% comment %}
  WTF Cart Section - Polished cart experience with checkout functionality
{% endcomment %}

<div class="cart-section" data-section-id="{{ section.id }}">
  <div class="cart-container">
    {% if cart.item_count == 0 %}
      <div class="cart-empty">
        <div class="cart-empty__content">
          <h1 class="cart-empty__title">Your cart is empty</h1>
          <p class="cart-empty__text">Start building your perfect drink!</p>
          <a href="/collections/all" class="cart-empty__button btn btn--primary">
            Start Shopping
          </a>
        </div>
      </div>
    {% else %}
      <div class="cart-header">
        <div class="cart-header__branding">
          <img src="{{ 'WTFLogo.png' | asset_url }}" 
               alt="{{ shop.name }}"
               class="cart-header__logo"
               width="60"
               height="60">
          <h1 class="cart-title">Your Cart ({{ cart.item_count }} {% if cart.item_count == 1 %}item{% else %}items{% endif %})</h1>
        </div>
      </div>

      <div class="cart-content">
        <div class="cart-items">
          {% for item in cart.items %}
            <div class="cart-item" data-variant-id="{{ item.variant.id }}">
              <div class="cart-item__image">
                {% if item.image %}
                  <img src="{{ item.image | image_url: width: 150 }}" 
                       alt="{{ item.product.title | escape }}"
                       loading="lazy"
                       width="150"
                       height="150">
                {% else %}
                  <div class="cart-item__image-placeholder">
                    <svg width="60" height="60" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                      <rect x="3" y="3" width="18" height="18" rx="2" ry="2"/>
                      <circle cx="8.5" cy="8.5" r="1.5"/>
                      <polyline points="21,15 16,10 5,21"/>
                    </svg>
                  </div>
                {% endif %}
              </div>

              <div class="cart-item__details">
                <h3 class="cart-item__title">
                  <a href="{{ item.product.url }}">{{ item.product.title }}</a>
                </h3>
                
                {% if item.variant.title != 'Default Title' %}
                  <p class="cart-item__variant">{{ item.variant.title }}</p>
                {% endif %}

                {% comment %} Display custom properties (drink customizations) {% endcomment %}
                {% if item.properties.size > 0 %}
                  <div class="cart-item__properties wtf-line__properties">
                    {% for property in item.properties %}
                      {% unless property.first contains '_' or property.last == blank %}
                        <div class="cart-item__property">
                          <strong>{{ property.first | replace: 'wtf_', '' | capitalize }}:</strong> 
                          {{ property.last }}
                        </div>
                      {% endunless %}
                    {% endfor %}
                    
                    {% comment %} Special handling for WTF drink builder properties {% endcomment %}
                    {% for property in item.properties %}
                      {% if property.first contains 'wtf_' and property.last != blank %}
                        {% assign prop_name = property.first | replace: 'wtf_', '' | replace: '_', ' ' | capitalize %}
                        <div class="cart-item__property cart-item__property--wtf">
                          <strong>{{ prop_name }}:</strong> {{ property.last }}
                        </div>
                      {% endif %}
                    {% endfor %}
                  </div>
                {% endif %}

                <div class="cart-item__price">
                  {% if item.original_line_price != item.final_line_price %}
                    <span class="cart-item__price--compare">${{ item.original_line_price | money_without_currency }}</span>
                  {% endif %}
                  <span class="cart-item__price--final">${{ item.final_line_price | money_without_currency }}</span>
                </div>
              </div>

              <div class="cart-item__quantity">
                <div class="quantity-selector">
                  <button type="button" 
                          class="quantity-selector__button quantity-selector__decrease"
                          data-variant-id="{{ item.variant.id }}"
                          {% if item.quantity <= 1 %}disabled{% endif %}>
                    <span class="visually-hidden">Decrease quantity</span>
                    <svg width="16" height="16" viewBox="0 0 16 16" fill="currentColor">
                      <path d="M4 8h8"/>
                    </svg>
                  </button>
                  
                  <input type="number" 
                         class="quantity-selector__input"
                         value="{{ item.quantity }}"
                         min="1"
                         max="99"
                         data-variant-id="{{ item.variant.id }}"
                         aria-label="Quantity for {{ item.product.title }}">
                  
                  <button type="button" 
                          class="quantity-selector__button quantity-selector__increase"
                          data-variant-id="{{ item.variant.id }}">
                    <span class="visually-hidden">Increase quantity</span>
                    <svg width="16" height="16" viewBox="0 0 16 16" fill="currentColor">
                      <path d="M8 4v8M4 8h8"/>
                    </svg>
                  </button>
                </div>
              </div>

              <div class="cart-item__remove">
                <button type="button" 
                        class="cart-item__remove-button"
                        data-variant-id="{{ item.variant.id }}"
                        aria-label="Remove {{ item.product.title }} from cart">
                  <svg width="20" height="20" viewBox="0 0 20 20" fill="currentColor">
                    <path d="M6 6l8 8M14 6l-8 8"/>
                  </svg>
                </button>
              </div>
            </div>
          {% endfor %}
        </div>

        <div class="cart-summary">
          <div class="cart-summary__content">
            <div class="cart-summary__row">
              <span class="cart-summary__label">Subtotal</span>
              <span class="cart-summary__value">${{ cart.total_price | money_without_currency }}</span>
            </div>

            {% if cart.total_discounts > 0 %}
              <div class="cart-summary__row cart-summary__discount">
                <span class="cart-summary__label">Discounts</span>
                <span class="cart-summary__value">-${{ cart.total_discounts | money_without_currency }}</span>
              </div>
            {% endif %}

            <div class="cart-summary__row cart-summary__total">
              <span class="cart-summary__label">Total</span>
              <span class="cart-summary__value">${{ cart.total_price | money_without_currency }}</span>
            </div>

            <div class="cart-summary__note">
              <small>Shipping and taxes calculated at checkout</small>
            </div>

            <div class="cart-summary__actions">
              <form action="{{ routes.cart_url }}" method="post" class="cart-checkout-form">
                <button type="submit" 
                        name="checkout"
                        class="cart-summary__checkout btn btn--primary btn--full-width">
                  Proceed to Checkout
                </button>
              </form>
              
              <a href="/collections/all" class="cart-summary__continue">
                Continue Shopping
              </a>
            </div>
          </div>
        </div>
      </div>
    {% endif %}
  </div>
</div>

<style>
.cart-container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 2rem;
}

.cart-empty {
  text-align: center;
  padding: 4rem 2rem;
}

.cart-empty__title {
  font-size: 2rem;
  margin-bottom: 1rem;
  color: #333;
}

.cart-empty__text {
  font-size: 1.1rem;
  color: #666;
  margin-bottom: 2rem;
}

.cart-empty__button {
  display: inline-block;
  padding: 1rem 2rem;
  background: #ff6600;
  color: white;
  text-decoration: none;
  border-radius: 4px;
  font-weight: bold;
  transition: background-color 0.3s ease;
}

.cart-empty__button:hover {
  background: #e55a00;
}

.cart-header {
  margin-bottom: 2rem;
}

.cart-title {
  font-size: 2rem;
  font-weight: bold;
  color: #333;
}

.cart-content {
  display: grid;
  grid-template-columns: 2fr 1fr;
  gap: 3rem;
}

.cart-item {
  display: grid;
  grid-template-columns: 100px 1fr auto auto;
  gap: 1rem;
  padding: 1.5rem 0;
  border-bottom: 1px solid #eee;
  align-items: start;
}

.cart-item__image {
  width: 100px;
  height: 100px;
  border-radius: 8px;
  overflow: hidden;
  background: #f5f5f5;
  display: flex;
  align-items: center;
  justify-content: center;
}

.cart-item__image img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.cart-item__image-placeholder {
  color: #ccc;
}

.cart-item__title {
  font-size: 1.1rem;
  font-weight: bold;
  margin-bottom: 0.5rem;
}

.cart-item__title a {
  color: #333;
  text-decoration: none;
}

.cart-item__title a:hover {
  color: #ff6600;
}

.cart-item__variant {
  color: #666;
  font-size: 0.9rem;
  margin-bottom: 0.5rem;
}

.cart-item__properties {
  margin-bottom: 0.5rem;
}

.cart-item__property {
  font-size: 0.9rem;
  color: #666;
  margin-bottom: 0.25rem;
}

.cart-item__property--wtf {
  background: #fff3e0;
  padding: 0.25rem 0.5rem;
  border-radius: 4px;
  border-left: 3px solid #ff6600;
}

.cart-item__price--compare {
  text-decoration: line-through;
  color: #999;
  margin-right: 0.5rem;
}

.cart-item__price--final {
  font-weight: bold;
  color: #333;
}

.quantity-selector {
  display: flex;
  align-items: center;
  border: 1px solid #ddd;
  border-radius: 4px;
  overflow: hidden;
}

.quantity-selector__button {
  background: #f8f8f8;
  border: none;
  padding: 0.5rem;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: background-color 0.2s ease;
}

.quantity-selector__button:hover:not(:disabled) {
  background: #e8e8e8;
}

.quantity-selector__button:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.quantity-selector__input {
  border: none;
  text-align: center;
  width: 60px;
  padding: 0.5rem;
  font-size: 1rem;
}

.cart-item__remove-button {
  background: none;
  border: none;
  color: #999;
  cursor: pointer;
  padding: 0.5rem;
  border-radius: 4px;
  transition: color 0.2s ease;
}

.cart-item__remove-button:hover {
  color: #ff4444;
}

.cart-summary {
  position: sticky;
  top: 2rem;
  height: fit-content;
}

.cart-summary__content {
  background: #f8f8f8;
  padding: 2rem;
  border-radius: 8px;
}

.cart-summary__row {
  display: flex;
  justify-content: space-between;
  margin-bottom: 1rem;
}

.cart-summary__discount {
  color: #28a745;
}

.cart-summary__total {
  font-size: 1.2rem;
  font-weight: bold;
  padding-top: 1rem;
  border-top: 1px solid #ddd;
}

.cart-summary__note {
  text-align: center;
  color: #666;
  margin: 1rem 0 2rem;
}

.cart-summary__checkout {
  width: 100%;
  padding: 1rem;
  background: #ff6600;
  color: white;
  border: none;
  border-radius: 4px;
  font-size: 1.1rem;
  font-weight: bold;
  cursor: pointer;
  transition: background-color 0.3s ease;
  margin-bottom: 1rem;
}

.cart-summary__checkout:hover {
  background: #e55a00;
}

.cart-summary__continue {
  display: block;
  text-align: center;
  color: #ff6600;
  text-decoration: none;
  font-weight: bold;
}

.cart-summary__continue:hover {
  text-decoration: underline;
}

.visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

@media (max-width: 768px) {
  .cart-content {
    grid-template-columns: 1fr;
    gap: 2rem;
  }
  
  .cart-item {
    grid-template-columns: 80px 1fr;
    gap: 1rem;
  }
  
  .cart-item__quantity,
  .cart-item__remove {
    grid-column: 1 / -1;
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: 1rem;
  }
  
  .cart-summary {
    position: static;
  }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const quantityInputs = document.querySelectorAll('.quantity-selector__input');
  const quantityButtons = document.querySelectorAll('.quantity-selector__button');
  const removeButtons = document.querySelectorAll('.cart-item__remove-button');
  
  // Handle quantity changes
  quantityInputs.forEach(input => {
    input.addEventListener('change', updateQuantity);
  });
  
  quantityButtons.forEach(button => {
    button.addEventListener('click', function() {
      const variantId = this.dataset.variantId;
      const input = document.querySelector(`input[data-variant-id="${variantId}"]`);
      const isIncrease = this.classList.contains('quantity-selector__increase');
      
      let newQuantity = parseInt(input.value);
      if (isIncrease) {
        newQuantity++;
      } else {
        newQuantity = Math.max(1, newQuantity - 1);
      }
      
      input.value = newQuantity;
      updateQuantity.call(input);
    });
  });
  
  // Handle item removal
  removeButtons.forEach(button => {
    button.addEventListener('click', function() {
      const variantId = this.dataset.variantId;
      removeItem(variantId);
    });
  });
  
  function updateQuantity() {
    const variantId = this.dataset.variantId;
    const quantity = parseInt(this.value);
    
    if (quantity < 1) {
      this.value = 1;
      return;
    }
    
    const formData = new FormData();
    formData.append('id', variantId);
    formData.append('quantity', quantity);
    
    fetch('/cart/change.js', {
      method: 'POST',
      body: formData
    })
    .then(response => response.json())
    .then(cart => {
      updateCartDisplay(cart);
    })
    .catch(error => {
      console.error('Error updating cart:', error);
      // Revert the input value on error
      location.reload();
    });
  }
  
  function removeItem(variantId) {
    const formData = new FormData();
    formData.append('id', variantId);
    formData.append('quantity', 0);
    
    fetch('/cart/change.js', {
      method: 'POST',
      body: formData
    })
    .then(response => response.json())
    .then(cart => {
      if (cart.item_count === 0) {
        location.reload();
      } else {
        updateCartDisplay(cart);
      }
    })
    .catch(error => {
      console.error('Error removing item:', error);
      location.reload();
    });
  }
  
  function updateCartDisplay(cart) {
    // Update cart total
    const totalElements = document.querySelectorAll('.cart-summary__value');
    if (totalElements.length > 0) {
      const lastTotal = totalElements[totalElements.length - 1];
      lastTotal.textContent = '$' + (cart.total_price / 100).toFixed(2);
    }
    
    // Update cart count in title
    const cartTitle = document.querySelector('.cart-title');
    if (cartTitle) {
      const itemText = cart.item_count === 1 ? 'item' : 'items';
      cartTitle.textContent = `Your Cart (${cart.item_count} ${itemText})`;
    }
    
    // Remove items that are no longer in cart
    cart.items.forEach(item => {
      const cartItem = document.querySelector(`[data-variant-id="${item.variant.id}"]`);
      if (!cartItem) return;
      
      const quantityInput = cartItem.querySelector('.quantity-selector__input');
      if (quantityInput && parseInt(quantityInput.value) !== item.quantity) {
        quantityInput.value = item.quantity;
      }
    });
    
    // Remove items that are no longer in the cart
    const currentItems = document.querySelectorAll('.cart-item');
    currentItems.forEach(itemElement => {
      const variantId = itemElement.dataset.variantId;
      const stillInCart = cart.items.some(item => item.variant.id.toString() === variantId);
      if (!stillInCart) {
        itemElement.remove();
      }
    });
  }
});
</script>

{% schema %}
{
  "name": "WTF Cart",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "header",
      "content": "Cart Settings"
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "default": false,
      "label": "Show vendor"
    },
    {
      "type": "checkbox",
      "id": "show_cart_note",
      "default": true,
      "label": "Enable cart notes"
    }
  ]
}
{% endschema %}
