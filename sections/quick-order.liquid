{% comment %}
  Professional Quick Order Section
  Streamlined ordering experience like Starbucks "Start an Order"
{% endcomment %}

<section class="quick-order">
  <div class="page-width">
    <div class="quick-order__header">
      <h2 class="quick-order__title">{{ section.settings.title | default: 'Quick Order' | escape }}</h2>
      <p class="quick-order__subtitle">{{ section.settings.subtitle | default: 'Skip the wait - order ahead for pickup' | escape }}</p>
    </div>

    <div class="quick-order__container">
      <div class="quick-order__options">
        {% for block in section.blocks %}
          {% case block.type %}
            {% when 'quick_item' %}
              <div class="quick-order__item" {{ block.shopify_attributes }}>
                <div class="quick-order__item-content">
                  <div class="quick-order__item-image">
                    {% if block.settings.item_image %}
                      <img src="{{ block.settings.item_image | image_url: width: 80 }}" 
                           alt="{{ block.settings.title }}" 
                           width="80"
                           height="80"
                           loading="lazy" />
                    {% else %}
                      {{ block.settings.fallback_emoji | default: 'üçÉ' }}
                    {% endif %}
                  </div>
                  <div class="quick-order__item-info">
                    <h3 class="quick-order__item-title">{{ block.settings.title | escape }}</h3>
                    {% if block.settings.description %}
                      <p class="quick-order__item-description">{{ block.settings.description | escape }}</p>
                    {% endif %}
                    <span class="quick-order__item-price">${{ block.settings.price | default: '8.00' }}</span>
                  </div>
                  <button type="button" 
                          class="quick-order__add-btn btn btn--primary"
                          data-product-title="{{ block.settings.title }}"
                          data-product-price="{{ block.settings.price | default: '8.00' }}"
                          data-product-id="{{ block.settings.product_id }}"
                          onclick="addToQuickCart(this)">
                    Add to Cart
                  </button>
                </div>
              </div>
          {% endcase %}
        {% endfor %}
      </div>

      <div class="quick-order__cart-summary">
        <h3 class="quick-order__cart-title">Your Order</h3>
        <div class="quick-order__cart-items" id="quick-cart-items">
          <p class="quick-order__empty-cart">Your cart is empty</p>
        </div>
        <div class="quick-order__cart-total">
          <div class="quick-order__total-line">
            <span>Total:</span>
            <span id="quick-cart-total">$0.00</span>
          </div>
        </div>
        <div class="quick-order__cart-actions">
          <a href="/cart" class="btn btn--primary">
            Proceed to Checkout
          </a>
          <a href="tel:(239) 955-0314" class="btn btn--secondary">
            Call to Order: (239) 955-0314
          </a>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
// Professional Quick Cart Functionality
let quickCartItems = [];
let quickCartTotal = 0;

function addToQuickCart(button) {
  const title = button.dataset.productTitle;
  const price = parseFloat(button.dataset.productPrice);
  const id = button.dataset.productId || Math.random().toString(36).substr(2, 9);
  
  // Find existing item or create new one
  const existingItem = quickCartItems.find(item => item.id === id);
  if (existingItem) {
    existingItem.quantity += 1;
  } else {
    quickCartItems.push({
      id: id,
      title: title,
      price: price,
      quantity: 1
    });
  }
  
  updateQuickCartDisplay();
  
  // Visual feedback
  const originalText = button.textContent;
  button.textContent = 'Added!';
  button.style.background = 'linear-gradient(135deg, #00a86b 0%, #008a56 100%)';
  
  setTimeout(() => {
    button.textContent = originalText;
    button.style.background = '';
  }, 1500);
}

function removeFromQuickCart(itemId) {
  quickCartItems = quickCartItems.filter(item => item.id !== itemId);
  updateQuickCartDisplay();
}

function updateQuickCartDisplay() {
  const cartItemsContainer = document.getElementById('quick-cart-items');
  const cartTotalElement = document.getElementById('quick-cart-total');
  
  if (quickCartItems.length === 0) {
    cartItemsContainer.innerHTML = '<p class="quick-order__empty-cart">Your cart is empty</p>';
    quickCartTotal = 0;
  } else {
    let itemsHTML = '';
    quickCartTotal = 0;
    
    quickCartItems.forEach(item => {
      const itemTotal = item.price * item.quantity;
      quickCartTotal += itemTotal;
      
      itemsHTML += `
        <div class="quick-cart-item">
          <div class="quick-cart-item__info">
            <span class="quick-cart-item__title">${item.title}</span>
            <span class="quick-cart-item__quantity">Qty: ${item.quantity}</span>
          </div>
          <div class="quick-cart-item__price">$${itemTotal.toFixed(2)}</div>
          <button type="button" 
                  class="quick-cart-item__remove" 
                  onclick="removeFromQuickCart('${item.id}')"
                  aria-label="Remove ${item.title}">
            √ó
          </button>
        </div>
      `;
    });
    
    cartItemsContainer.innerHTML = itemsHTML;
  }
  
  cartTotalElement.textContent = `$${quickCartTotal.toFixed(2)}`;
}

// Initialize on page load
document.addEventListener('DOMContentLoaded', function() {
  updateQuickCartDisplay();
});
</script>

<style>
  .quick-order__empty-cart {
    text-align: center;
    color: var(--neutral-medium);
    font-style: italic;
    margin: 2rem 0;
    font-size: 1.4rem;
  }

  .quick-cart-item {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 1.5rem 0;
    border-bottom: 1px solid #e5e5e5;
    gap: 1rem;
  }

  .quick-cart-item:last-child {
    border-bottom: none;
  }

  .quick-cart-item__info {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: 0.4rem;
  }

  .quick-cart-item__title {
    font-weight: 600;
    font-size: 1.4rem;
    color: var(--neutral-dark);
  }

  .quick-cart-item__quantity {
    font-size: 1.2rem;
    color: var(--neutral-medium);
  }

  .quick-cart-item__price {
    font-weight: 700;
    color: var(--primary-orange);
    font-size: 1.5rem;
    margin-right: 1rem;
  }

  .quick-cart-item__remove {
    background: none;
    border: none;
    color: var(--neutral-medium);
    font-size: 2.4rem;
    cursor: pointer;
    padding: 0.5rem;
    line-height: 1;
    border-radius: 50%;
    width: 3rem;
    height: 3rem;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
  }

  .quick-cart-item__remove:hover {
    background: #fee;
    color: #e74c3c;
  }

  @media (max-width: 768px) {
    .quick-order__container {
      grid-template-columns: 1fr;
    }
    
    .quick-order__cart-summary {
      position: static;
      margin-top: 3rem;
    }
    
    .quick-order__item-content {
      flex-direction: column;
      text-align: center;
      gap: 1.5rem;
    }
    
    .quick-order__add-btn {
      width: 100%;
      max-width: 25rem;
    }
  }
</style>

{% schema %}
{
  "name": "Quick Order",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Heading",
      "default": "Quick Order"
    },
    {
      "type": "textarea",
      "id": "subtitle",
      "label": "Subheading",
      "default": "Skip the wait - order ahead for pickup"
    }
  ],
  "blocks": [
    {
      "type": "quick_item",
      "name": "Quick Order Item",
      "settings": [
        {
          "type": "text",
          "id": "title",
          "label": "Item Name",
          "default": "Popular Item"
        },
        {
          "type": "textarea",
          "id": "description",
          "label": "Description",
          "default": "Brief description"
        },
        {
          "type": "text",
          "id": "price",
          "label": "Price",
          "default": "8.00"
        },
        {
          "type": "image_picker",
          "id": "item_image",
          "label": "Item Image"
        },
        {
          "type": "text",
          "id": "fallback_emoji",
          "label": "Emoji (fallback)",
          "default": "üçÉ"
        },
        {
          "type": "text",
          "id": "product_id",
          "label": "Product ID (optional)"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Quick Order",
      "blocks": [
        {
          "type": "quick_item",
          "settings": {
            "title": "Medium Kava (16oz)",
            "description": "Traditional kava blend",
            "price": "10.00",
            "fallback_emoji": "ü••"
          }
        },
        {
          "type": "quick_item",
          "settings": {
            "title": "Kratom Tea (Green)",
            "description": "Premium green kratom",
            "price": "8.00",
            "fallback_emoji": "üçµ"
          }
        },
        {
          "type": "quick_item",
          "settings": {
            "title": "Delta-9 Shot",
            "description": "5mg THC shot",
            "price": "15.00",
            "fallback_emoji": "‚ú®"
          }
        },
        {
          "type": "quick_item",
          "settings": {
            "title": "Draft Pour (16oz)",
            "description": "Rotating tap selection",
            "price": "12.00",
            "fallback_emoji": "üç∫"
          }
        }
      ]
    }
  ]
}
{% endschema %}
