{% comment %}
  WTF Order Builder Section
  Advanced ordering interface with pickup/delivery options
{% endcomment %}

<div class="order-builder" data-section-id="{{ section.id }}">
  <div class="order-builder__container">
    <div class="order-builder__header">
      <h1 class="order-builder__title">{{ section.settings.title | default: 'Order Your Favorites' }}</h1>
      {% if section.settings.description != blank %}
        <p class="order-builder__description">{{ section.settings.description }}</p>
      {% endif %}
    </div>

    <div class="order-builder__content">
      <div class="order-options">
        <div class="order-option" data-option="pickup">
          <div class="order-option__header">
            <input type="radio" name="order_type" value="pickup" id="pickup" checked>
            <label for="pickup" class="order-option__label">
              <svg class="order-option__icon" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                <path d="M19 7h-3V6a4 4 0 0 0-8 0v1H5a1 1 0 0 0-1 1v11a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3V8a1 1 0 0 0-1-1zM10 6a2 2 0 0 1 4 0v1h-4V6zm8 13a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1V9h2v1a1 1 0 0 0 2 0V9h4v1a1 1 0 0 0 2 0V9h2v10z"/>
              </svg>
              <span class="order-option__title">Pickup</span>
              <span class="order-option__subtitle">Ready in 10-15 minutes</span>
            </label>
          </div>
          <div class="order-option__content">
            <div class="pickup-info">
              <h3>Pickup Location</h3>
              <div class="location-info">
                <p><strong>WTF | Welcome To Florida</strong></p>
                <p>1520 SE 46th Ln, Unit B<br>Cape Coral, FL 33904</p>
                <p><strong>Phone:</strong> (239) 955-0314</p>
                <p><strong>Hours:</strong> Daily 8am–10pm</p>
              </div>
            </div>
          </div>
        </div>

        <div class="order-option" data-option="delivery">
          <div class="order-option__header">
            <input type="radio" name="order_type" value="delivery" id="delivery">
            <label for="delivery" class="order-option__label">
              <svg class="order-option__icon" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                <rect x="1" y="3" width="15" height="13"/>
                <polygon points="16,8 20,8 23,11 23,16 16,16 16,8"/>
                <circle cx="5.5" cy="18.5" r="2.5"/>
                <circle cx="18.5" cy="18.5" r="2.5"/>
              </svg>
              <span class="order-option__title">Delivery</span>
              <span class="order-option__subtitle">30-45 minutes • $3.99 fee</span>
            </label>
          </div>
          <div class="order-option__content" style="display: none;">
            <div class="delivery-info">
              <h3>Delivery Address</h3>
              <form class="delivery-form">
                <div class="form-group">
                  <label for="delivery-address">Street Address</label>
                  <input type="text" id="delivery-address" name="address" required>
                </div>
                <div class="form-row">
                  <div class="form-group">
                    <label for="delivery-city">City</label>
                    <input type="text" id="delivery-city" name="city" value="Cape Coral" required>
                  </div>
                  <div class="form-group">
                    <label for="delivery-zip">ZIP Code</label>
                    <input type="text" id="delivery-zip" name="zip" required>
                  </div>
                </div>
                <div class="form-group">
                  <label for="delivery-instructions">Delivery Instructions (Optional)</label>
                  <textarea id="delivery-instructions" name="instructions" rows="3"></textarea>
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>

      <div class="menu-categories">
        <div class="category-tabs">
          <button class="category-tab active" data-category="kava">Kava Drinks</button>
          <button class="category-tab" data-category="kratom">Kratom Teas</button>
          <button class="category-tab" data-category="thc">THC Drinks</button>
          <button class="category-tab" data-category="food">Food & Snacks</button>
        </div>

        <div class="category-content">
          <div class="category-section active" data-category="kava">
            <div class="menu-grid">
              {% for product in collections.kava-drinks.products limit: 8 %}
                <div class="menu-item" data-product-id="{{ product.id }}">
                  {% if product.featured_image %}
                    <div class="menu-item__image">
                      <img src="{{ product.featured_image | image_url: width: 200 }}" 
                           alt="{{ product.title }}"
                           loading="lazy"
                           width="200"
                           height="200">
                    </div>
                  {% endif %}
                  <div class="menu-item__content">
                    <h4 class="menu-item__title">{{ product.title }}</h4>
                    <p class="menu-item__description">{{ product.description | truncate: 100 }}</p>
                    <div class="menu-item__price">${{ product.price | money_without_currency }}</div>
                    <div class="menu-item__actions">
                      <div class="quantity-controls">
                        <button type="button" class="quantity-btn quantity-btn--decrease">-</button>
                        <span class="quantity-display">0</span>
                        <button type="button" class="quantity-btn quantity-btn--increase">+</button>
                      </div>
                      <button class="menu-item__customize" data-product-handle="{{ product.handle }}">
                        Customize
                      </button>
                    </div>
                  </div>
                </div>
              {% endfor %}
            </div>
          </div>

          <div class="category-section" data-category="kratom">
            <div class="menu-grid">
              {% for product in collections.kratom-teas.products limit: 8 %}
                <div class="menu-item" data-product-id="{{ product.id }}">
                  {% if product.featured_image %}
                    <div class="menu-item__image">
                      <img src="{{ product.featured_image | image_url: width: 200 }}" 
                           alt="{{ product.title }}"
                           loading="lazy"
                           width="200"
                           height="200">
                    </div>
                  {% endif %}
                  <div class="menu-item__content">
                    <h4 class="menu-item__title">{{ product.title }}</h4>
                    <p class="menu-item__description">{{ product.description | truncate: 100 }}</p>
                    <div class="menu-item__price">${{ product.price | money_without_currency }}</div>
                    <div class="menu-item__actions">
                      <div class="quantity-controls">
                        <button type="button" class="quantity-btn quantity-btn--decrease">-</button>
                        <span class="quantity-display">0</span>
                        <button type="button" class="quantity-btn quantity-btn--increase">+</button>
                      </div>
                      <button class="menu-item__customize" data-product-handle="{{ product.handle }}">
                        Customize
                      </button>
                    </div>
                  </div>
                </div>
              {% endfor %}
            </div>
          </div>

          <div class="category-section" data-category="thc">
            <div class="menu-grid">
              {% for product in collections.thc-drinks.products limit: 8 %}
                <div class="menu-item" data-product-id="{{ product.id }}">
                  {% if product.featured_image %}
                    <div class="menu-item__image">
                      <img src="{{ product.featured_image | image_url: width: 200 }}" 
                           alt="{{ product.title }}"
                           loading="lazy"
                           width="200"
                           height="200">
                    </div>
                  {% endif %}
                  <div class="menu-item__content">
                    <h4 class="menu-item__title">{{ product.title }}</h4>
                    <p class="menu-item__description">{{ product.description | truncate: 100 }}</p>
                    <div class="menu-item__price">${{ product.price | money_without_currency }}</div>
                    <div class="menu-item__actions">
                      <div class="quantity-controls">
                        <button type="button" class="quantity-btn quantity-btn--decrease">-</button>
                        <span class="quantity-display">0</span>
                        <button type="button" class="quantity-btn quantity-btn--increase">+</button>
                      </div>
                      <button class="menu-item__customize" data-product-handle="{{ product.handle }}">
                        Customize
                      </button>
                    </div>
                  </div>
                </div>
              {% endfor %}
            </div>
          </div>

          <div class="category-section" data-category="food">
            <div class="menu-grid">
              {% for product in collections.food-snacks.products limit: 8 %}
                <div class="menu-item" data-product-id="{{ product.id }}">
                  {% if product.featured_image %}
                    <div class="menu-item__image">
                      <img src="{{ product.featured_image | image_url: width: 200 }}" 
                           alt="{{ product.title }}"
                           loading="lazy"
                           width="200"
                           height="200">
                    </div>
                  {% endif %}
                  <div class="menu-item__content">
                    <h4 class="menu-item__title">{{ product.title }}</h4>
                    <p class="menu-item__description">{{ product.description | truncate: 100 }}</p>
                    <div class="menu-item__price">${{ product.price | money_without_currency }}</div>
                    <div class="menu-item__actions">
                      <div class="quantity-controls">
                        <button type="button" class="quantity-btn quantity-btn--decrease">-</button>
                        <span class="quantity-display">0</span>
                        <button type="button" class="quantity-btn quantity-btn--increase">+</button>
                      </div>
                    </div>
                  </div>
                </div>
              {% endfor %}
            </div>
          </div>
        </div>
      </div>

      <div class="order-summary-sticky">
        <div class="order-summary">
          <h3 class="order-summary__title">Your Order</h3>
          <div class="order-summary__items" id="order-items">
            <p class="order-summary__empty">No items in your order yet</p>
          </div>
          <div class="order-summary__totals">
            <div class="order-summary__row">
              <span>Subtotal:</span>
              <span id="subtotal">$0.00</span>
            </div>
            <div class="order-summary__row delivery-fee" style="display: none;">
              <span>Delivery Fee:</span>
              <span>$3.99</span>
            </div>
            <div class="order-summary__row order-summary__total">
              <span>Total:</span>
              <span id="total">$0.00</span>
            </div>
          </div>
          <button class="order-summary__checkout" disabled>
            Add to Cart
          </button>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
.order-builder {
  padding: 2rem 0;
  background: #f8f8f8;
  min-height: 100vh;
}

.order-builder__container {
  max-width: 1400px;
  margin: 0 auto;
  padding: 0 2rem;
}

.order-builder__header {
  text-align: center;
  margin-bottom: 3rem;
}

.order-builder__title {
  font-size: 2.5rem;
  font-weight: bold;
  color: #333;
  margin-bottom: 1rem;
}

.order-builder__description {
  font-size: 1.2rem;
  color: #666;
  max-width: 600px;
  margin: 0 auto;
}

.order-builder__content {
  display: grid;
  grid-template-columns: 1fr 350px;
  gap: 3rem;
}

.order-options {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 1rem;
  margin-bottom: 2rem;
}

.order-option {
  background: white;
  border-radius: 12px;
  overflow: hidden;
  box-shadow: 0 2px 8px rgba(0,0,0,0.1);
}

.order-option__header {
  position: relative;
}

.order-option input[type="radio"] {
  position: absolute;
  opacity: 0;
  width: 0;
  height: 0;
}

.order-option__label {
  display: flex;
  align-items: center;
  padding: 1.5rem;
  cursor: pointer;
  transition: background-color 0.3s ease;
}

.order-option input:checked + .order-option__label {
  background: #fff3e0;
  border-left: 4px solid #ff6600;
}

.order-option__icon {
  margin-right: 1rem;
  color: #ff6600;
}

.order-option__title {
  font-size: 1.2rem;
  font-weight: bold;
  color: #333;
  margin-bottom: 0.25rem;
}

.order-option__subtitle {
  font-size: 0.9rem;
  color: #666;
}

.order-option__content {
  padding: 0 1.5rem 1.5rem;
}

.location-info p {
  margin-bottom: 0.5rem;
  color: #666;
}

.delivery-form {
  margin-top: 1rem;
}

.form-group {
  margin-bottom: 1rem;
}

.form-row {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 1rem;
}

.form-group label {
  display: block;
  font-weight: bold;
  margin-bottom: 0.5rem;
  color: #333;
}

.form-group input,
.form-group textarea {
  width: 100%;
  padding: 0.75rem;
  border: 2px solid #ddd;
  border-radius: 6px;
  font-size: 1rem;
}

.form-group input:focus,
.form-group textarea:focus {
  outline: none;
  border-color: #ff6600;
}

.category-tabs {
  display: flex;
  background: white;
  border-radius: 12px;
  padding: 0.5rem;
  margin-bottom: 2rem;
  box-shadow: 0 2px 8px rgba(0,0,0,0.1);
}

.category-tab {
  flex: 1;
  padding: 1rem;
  background: none;
  border: none;
  border-radius: 8px;
  font-weight: bold;
  cursor: pointer;
  transition: all 0.3s ease;
}

.category-tab.active {
  background: #ff6600;
  color: white;
}

.category-section {
  display: none;
}

.category-section.active {
  display: block;
}

.menu-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
  gap: 1.5rem;
}

.menu-item {
  background: white;
  border-radius: 12px;
  overflow: hidden;
  box-shadow: 0 2px 8px rgba(0,0,0,0.1);
  transition: transform 0.3s ease;
}

.menu-item:hover {
  transform: translateY(-2px);
}

.menu-item__image {
  width: 100%;
  height: 150px;
  overflow: hidden;
}

.menu-item__image img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.menu-item__content {
  padding: 1.5rem;
}

.menu-item__title {
  font-size: 1.2rem;
  font-weight: bold;
  color: #333;
  margin-bottom: 0.5rem;
}

.menu-item__description {
  color: #666;
  font-size: 0.9rem;
  margin-bottom: 1rem;
  line-height: 1.4;
}

.menu-item__price {
  font-size: 1.3rem;
  font-weight: bold;
  color: #ff6600;
  margin-bottom: 1rem;
}

.menu-item__actions {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.quantity-controls {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.quantity-btn {
  width: 32px;
  height: 32px;
  border: 2px solid #ddd;
  background: white;
  border-radius: 6px;
  cursor: pointer;
  font-weight: bold;
  transition: all 0.2s ease;
}

.quantity-btn:hover {
  border-color: #ff6600;
  background: #fff3e0;
}

.quantity-display {
  min-width: 30px;
  text-align: center;
  font-weight: bold;
}

.menu-item__customize {
  padding: 0.5rem 1rem;
  background: #f0f0f0;
  border: none;
  border-radius: 6px;
  cursor: pointer;
  font-size: 0.9rem;
  transition: background-color 0.2s ease;
}

.menu-item__customize:hover {
  background: #e0e0e0;
}

.order-summary-sticky {
  position: sticky;
  top: 2rem;
  height: fit-content;
}

.order-summary {
  background: white;
  border-radius: 12px;
  padding: 2rem;
  box-shadow: 0 4px 16px rgba(0,0,0,0.1);
}

.order-summary__title {
  font-size: 1.5rem;
  font-weight: bold;
  margin-bottom: 1.5rem;
  text-align: center;
}

.order-summary__empty {
  text-align: center;
  color: #999;
  font-style: italic;
  margin-bottom: 2rem;
}

.order-summary__totals {
  border-top: 1px solid #eee;
  padding-top: 1rem;
  margin-top: 1rem;
}

.order-summary__row {
  display: flex;
  justify-content: space-between;
  margin-bottom: 0.5rem;
}

.order-summary__total {
  font-size: 1.2rem;
  font-weight: bold;
  border-top: 2px solid #ff6600;
  padding-top: 1rem;
  margin-top: 1rem;
}

.order-summary__checkout {
  width: 100%;
  padding: 1rem;
  background: #ff6600;
  color: white;
  border: none;
  border-radius: 8px;
  font-size: 1.1rem;
  font-weight: bold;
  cursor: pointer;
  transition: background-color 0.3s ease;
  margin-top: 2rem;
}

.order-summary__checkout:hover:not(:disabled) {
  background: #e55a00;
}

.order-summary__checkout:disabled {
  background: #ccc;
  cursor: not-allowed;
}

@media (max-width: 1024px) {
  .order-builder__content {
    grid-template-columns: 1fr;
    gap: 2rem;
  }
  
  .order-summary-sticky {
    position: static;
  }
  
  .order-options {
    grid-template-columns: 1fr;
  }
}

@media (max-width: 768px) {
  .category-tabs {
    flex-wrap: wrap;
  }
  
  .category-tab {
    flex: 1 1 50%;
  }
  
  .menu-grid {
    grid-template-columns: 1fr;
  }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const orderTypeRadios = document.querySelectorAll('input[name="order_type"]');
  const categoryTabs = document.querySelectorAll('.category-tab');
  const categorySections = document.querySelectorAll('.category-section');
  const quantityBtns = document.querySelectorAll('.quantity-btn');
  const deliveryFee = document.querySelector('.delivery-fee');
  
  let orderItems = [];
  let subtotal = 0;
  
  // Handle order type changes
  orderTypeRadios.forEach(radio => {
    radio.addEventListener('change', function() {
      // Hide all option contents
      document.querySelectorAll('.order-option__content').forEach(content => {
        content.style.display = 'none';
      });
      
      // Show selected option content
      const selectedOption = document.querySelector(`[data-option="${this.value}"]`);
      const content = selectedOption.querySelector('.order-option__content');
      if (content) {
        content.style.display = 'block';
      }
      
      // Show/hide delivery fee
      if (this.value === 'delivery') {
        deliveryFee.style.display = 'flex';
      } else {
        deliveryFee.style.display = 'none';
      }
      
      updateTotal();
    });
  });
  
  // Handle category tab changes
  categoryTabs.forEach(tab => {
    tab.addEventListener('click', function() {
      const category = this.dataset.category;
      
      // Update tab states
      categoryTabs.forEach(t => t.classList.remove('active'));
      this.classList.add('active');
      
      // Update section visibility
      categorySections.forEach(section => {
        section.classList.remove('active');
        if (section.dataset.category === category) {
          section.classList.add('active');
        }
      });
    });
  });
  
  // Handle quantity changes
  quantityBtns.forEach(btn => {
    btn.addEventListener('click', function() {
      const menuItem = this.closest('.menu-item');
      const productId = menuItem.dataset.productId;
      const quantityDisplay = menuItem.querySelector('.quantity-display');
      const isIncrease = this.classList.contains('quantity-btn--increase');
      
      let currentQuantity = parseInt(quantityDisplay.textContent);
      
      if (isIncrease) {
        currentQuantity++;
      } else {
        currentQuantity = Math.max(0, currentQuantity - 1);
      }
      
      quantityDisplay.textContent = currentQuantity;
      updateOrderItem(menuItem, currentQuantity);
    });
  });
  
  function updateOrderItem(menuItem, quantity) {
    const productId = menuItem.dataset.productId;
    const title = menuItem.querySelector('.menu-item__title').textContent;
    const price = parseFloat(menuItem.querySelector('.menu-item__price').textContent.replace('$', ''));
    
    // Remove existing item
    orderItems = orderItems.filter(item => item.productId !== productId);
    
    // Add new item if quantity > 0
    if (quantity > 0) {
      orderItems.push({
        productId,
        title,
        price,
        quantity
      });
    }
    
    updateOrderSummary();
  }
  
  function updateOrderSummary() {
    const orderItemsContainer = document.getElementById('order-items');
    const subtotalElement = document.getElementById('subtotal');
    const totalElement = document.getElementById('total');
    const checkoutBtn = document.querySelector('.order-summary__checkout');
    
    if (orderItems.length === 0) {
      orderItemsContainer.innerHTML = '<p class="order-summary__empty">No items in your order yet</p>';
      subtotal = 0;
    } else {
      let itemsHTML = '';
      subtotal = 0;
      
      orderItems.forEach(item => {
        const itemTotal = item.price * item.quantity;
        subtotal += itemTotal;
        
        itemsHTML += `
          <div class="order-summary__item">
            <div class="order-summary__item-details">
              <span class="order-summary__item-name">${item.title}</span>
              <span class="order-summary__item-quantity">x${item.quantity}</span>
            </div>
            <span class="order-summary__item-price">$${itemTotal.toFixed(2)}</span>
          </div>
        `;
      });
      
      orderItemsContainer.innerHTML = itemsHTML;
    }
    
    subtotalElement.textContent = '$' + subtotal.toFixed(2);
    updateTotal();
    
    checkoutBtn.disabled = orderItems.length === 0;
  }
  
  function updateTotal() {
    const totalElement = document.getElementById('total');
    const isDelivery = document.querySelector('input[name="order_type"]:checked').value === 'delivery';
    const deliveryFeeAmount = isDelivery ? 3.99 : 0;
    const total = subtotal + deliveryFeeAmount;
    
    totalElement.textContent = '$' + total.toFixed(2);
  }
  
  // Handle checkout
  document.querySelector('.order-summary__checkout').addEventListener('click', function() {
    if (orderItems.length === 0) return;
    
    // Here you would typically process the order
    // For now, we'll just redirect to cart
    alert('Order functionality would be implemented here. Redirecting to cart...');
    window.location.href = '/cart';
  });
});
</script>

{% schema %}
{
  "name": "WTF Order Builder",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "default": "Order Your Favorites",
      "label": "Section title"
    },
    {
      "type": "textarea",
      "id": "description",
      "label": "Section description"
    },
    {
      "type": "checkbox",
      "id": "enable_delivery",
      "default": true,
      "label": "Enable delivery option"
    },
    {
      "type": "number",
      "id": "delivery_fee",
      "default": 399,
      "label": "Delivery fee (in cents)"
    }
  ]
}
{% endschema %}
