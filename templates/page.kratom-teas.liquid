<style>
      /* ‚Äî‚Äî‚Äî Base / Layout ‚Äî‚Äî‚Äî */
      * { box-sizing: border-box; margin: 0; padding: 0; }
      body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; background: #f8f9fa; line-height: 1.6; color:#333; }
      .header { background: #ff6600; color: #fff; padding: 15px 0; text-align: center; font-size: 24px; font-weight: 700; }
      .container { max-width: 1200px; margin: 0 auto; padding: 20px; }
      .back-link { display: inline-block; color: #ff6600; text-decoration: none; font-weight: 700; font-size: 16px; margin-bottom: 20px; padding: 10px 15px; border: 2px solid #ff6600; border-radius: 5px; transition: all .2s ease; }
      .back-link:hover { background: #ff6600; color: #fff; }
      .product-grid { display: grid; grid-template-columns: 1fr 1fr; gap: 40px; align-items: start; }
      .product-image { width: 100%; max-width: 400px; border-radius: 10px; box-shadow: 0 4px 15px rgba(0,0,0,.1); height:auto; }
      .product-details { background: #fff; padding: 30px; border-radius: 10px; box-shadow: 0 4px 15px rgba(0,0,0,.1); }
      .product-title { font-size: 32px; margin-bottom: 10px; font-weight: 800; }
      .product-price { font-size: 24px; color: #ff6600; font-weight: 800; margin-bottom: 15px; }
      .product-description { color: #666; margin-bottom: 30px; font-size: 16px; }
      .selection-section { margin: 30px 0; border-bottom: 1px solid #eee; padding-bottom: 20px; }
      .selection-section:last-child { border-bottom: none; }
      .section-title { font-size: 18px; font-weight: 800; margin-bottom: 15px; }
      .info-box { background: #e7f3ff; padding: 15px; border-radius: 8px; margin-bottom: 15px; font-size: 14px; }

      /* ‚Äî‚Äî‚Äî Options ‚Äî‚Äî‚Äî */
      .option-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(150px,1fr)); gap: 10px; }
      .option-button { padding: 15px; border: 3px solid #ddd; border-radius: 8px; text-align: center; background: #fff; cursor: pointer; transition: transform .12s ease, box-shadow .12s ease, border-color .12s ease; color:#333; font-size: 14px; min-height: 60px; display:flex; align-items:center; justify-content:center; flex-direction:column; }
      .option-button:hover { border-color: #ff6600; transform: translateY(-2px); box-shadow: 0 4px 8px rgba(255,102,0,0.2); }
      .option-button.selected { background: #ff6600; color: #fff; border-color: #ff6600; font-weight: 800; }

      /* Strain-specific colors */
      .strain-green.selected { background: #4caf50; border-color: #4caf50; }
      .strain-red.selected { background: #f44336; border-color: #f44336; }
      .strain-white.selected { background: #9e9e9e; border-color: #9e9e9e; }
      .strain-yellow.selected { background: #ffeb3b; border-color: #ffeb3b; color: #333; }

      /* Flavor categories */
      .flavor-category { margin: 20px 0; }
      .flavor-category-title { font-size: 16px; font-weight: 700; margin-bottom: 10px; color: #555; }
      .flavor-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(120px,1fr)); gap: 8px; }
      .flavor-button { padding: 10px 8px; border: 2px solid #ddd; border-radius: 6px; text-align: center; background: #fff; cursor: pointer; transition: all .12s ease; font-size: 12px; color: #333; min-height: 45px; display: flex; align-items: center; justify-content: center; }
      .flavor-button:hover { border-color: #28a745; transform: translateY(-1px); }
      .flavor-button.selected { background: #28a745; color: #fff; border-color: #28a745; font-weight: 600; }

      /* ‚Äî‚Äî‚Äî Quantity ‚Äî‚Äî‚Äî */
      .quantity-controls { display:flex; align-items:center; gap: 15px; }
      .qty-btn { width: 40px; height: 40px; border: 2px solid #ff6600; background:#fff; color:#ff6600; border-radius: 50%; cursor: pointer; font-size: 18px; font-weight: 700; transition: all .12s ease; }
      .qty-btn:hover { background:#ff6600; color:#fff; transform: scale(1.08); }
      .qty-input { width: 80px; text-align:center; padding:10px; border:2px solid #ddd; border-radius:5px; font-size:16px; }

      /* ‚Äî‚Äî‚Äî Comments ‚Äî‚Äî‚Äî */
      .comments-textarea { width: 100%; padding: 12px; border: 2px solid #ddd; border-radius: 5px; resize: vertical; font-size: 14px; line-height: 1.4; }
      .comments-textarea:focus { border-color: #ff6600; outline: none; }

      /* ‚Äî‚Äî‚Äî CTA / Status ‚Äî‚Äî‚Äî */
      .add-to-cart-btn { width: 100%; padding: 18px; background: #ff6600; color: #fff; border: none; border-radius: 8px; font-size: 18px; font-weight: 800; cursor: pointer; margin-top: 20px; transition: transform .12s ease, box-shadow .12s ease, background .12s ease; }
      .add-to-cart-btn:hover { background:#e55a00; transform: translateY(-2px); box-shadow: 0 4px 12px rgba(255,102,0,0.3); }
      .add-to-cart-btn:disabled { background:#ccc; cursor:not-allowed; transform:none; box-shadow:none; }
      .success-message { background: #d4edda; color: #155724; padding: 15px; border-radius: 5px; margin: 15px 0; border: 1px solid #c3e6cb; display: none; font-size: 14px; }
      .success-message.show { display: block; }
      .cart-status { position: fixed; top: 20px; right: 20px; background:#ff6600; color:#fff; padding:10px 15px; border-radius:25px; font-weight:700; z-index:1000; box-shadow:0 4px 12px rgba(255,102,0,0.3); }

      /* ‚Äî‚Äî‚Äî Motion preferences ‚Äî‚Äî‚Äî */
      @media (prefers-reduced-motion: reduce){
        .back-link, .option-button, .qty-btn, .add-to-cart-btn { transition: none !important; }
      }

      /* ‚Äî‚Äî‚Äî Responsive ‚Äî‚Äî‚Äî */
      @media (max-width: 768px){
        .product-grid { grid-template-columns: 1fr; gap:24px; }
        .option-grid { grid-template-columns: repeat(2,1fr); }
        .flavor-grid { grid-template-columns: repeat(3,1fr); }
        .product-details { padding: 20px; }
      }

      /* Focus visible outline */
      :where(.back-link, .option-button, .qty-btn, .add-to-cart-btn):focus-visible { outline: 3px solid #1a73e8; outline-offset: 2px; border-radius: 8px; }
      .sr-only { position:absolute!important; width:1px; height:1px; overflow:hidden; clip:rect(1px,1px,1px,1px); white-space:nowrap; }
    </style>

    <script>
      window.KRATOM_TEAS_VARIANT_ID = {{ page.metafields.custom.kratom_variant_id | default: settings.kratom_teas_variant_id | json }};
    </script>
  <div class="header">WTF | Welcome To Florida</div>
    <div class="cart-status" id="cart-status" aria-live="polite">
      Cart: <span id="cart-count">{{ cart.item_count }}</span> items
    </div>

    <div class="container">
      <a href="/" class="back-link">‚Üê Back to Menu</a>

      <div class="product-grid">
        <div class="product-image-section">
          <img
            src="{{ 'kratom_teas_150x150.jpg' | asset_url }}"
            alt="Kratom Teas"
            class="product-image"
            width="400"
            height="400"
            loading="eager"
            fetchpriority="high"
          >
        </div>

        <div class="product-details">
          <h1 class="product-title">Kratom Teas</h1>
          <div class="product-price" id="product-price">$9.00 - Medium ‚Ä¢ $15.00 - Large ‚Ä¢ $100.00 - Gallon</div>
          <p class="product-description">
            Premium kratom teas with your choice of strain, size, and extensive flavor options. Customize with sugar-free options, regular flavors, creamers, and ice preferences.
          </p>

          <!-- Size Selection (Variants) -->
          <div class="selection-section">
            <h3 class="section-title">üìè Choose Your Size</h3>
            <div class="option-grid" id="size-options" role="group" aria-label="Size options">
              <button type="button" class="option-button" data-size="Medium" data-price="9.00">
                <strong>Medium</strong><br>
                <small>$9.00</small>
              </button>
              <button type="button" class="option-button" data-size="Large" data-price="15.00">
                <strong>Large</strong><br>
                <small>$15.00</small>
              </button>
              <button type="button" class="option-button" data-size="Gallon" data-price="100.00">
                <strong>Gallon</strong><br>
                <small>$100.00</small>
              </button>
            </div>
          </div>

          <!-- Kratom Strain Selection -->
          <div class="selection-section">
            <h3 class="section-title">üçÉ Choose Your Kratom Strain</h3>
            <div class="info-box">
              <strong>Strain Effects:</strong> Green (energizing), Red (relaxing), White (stimulating), Yellow (balanced)
            </div>

            <div class="option-grid" id="strain-options" role="group" aria-label="Kratom strain options">
              <button type="button" class="option-button strain-green" data-strain="Green">
                <strong>Green</strong><br>
                <small>Energizing</small>
              </button>
              <button type="button" class="option-button strain-red" data-strain="Red">
                <strong>Red</strong><br>
                <small>Relaxing</small>
              </button>
              <button type="button" class="option-button strain-white" data-strain="White">
                <strong>White</strong><br>
                <small>Stimulating</small>
              </button>
              <button type="button" class="option-button strain-yellow" data-strain="Yellow">
                <strong>Yellow</strong><br>
                <small>Balanced</small>
              </button>
            </div>
          </div>

          <!-- Sugar-Free Flavor Selection -->
          <div class="selection-section">
            <h3 class="section-title">üçì Sugar-Free Flavors</h3>
            <div class="flavor-grid" id="sugar-free-options" role="group" aria-label="Sugar-free flavor options">
              <button type="button" class="flavor-button" data-flavor="Strawberry">Strawberry</button>
              <button type="button" class="flavor-button" data-flavor="Mexican Chocolate">Mexican Chocolate</button>
              <button type="button" class="flavor-button" data-flavor="Cosmopolitan">Cosmopolitan</button>
              <button type="button" class="flavor-button" data-flavor="Pumpkin Spice">Pumpkin Spice</button>
              <button type="button" class="flavor-button" data-flavor="Cranberry">Cranberry</button>
              <button type="button" class="flavor-button" data-flavor="Apple Spice">Apple Spice</button>
              <button type="button" class="flavor-button" data-flavor="S'mores">S'mores</button>
              <button type="button" class="flavor-button" data-flavor="Candy Corn">Candy Corn</button>
              <button type="button" class="flavor-button" data-flavor="Pomegranate">Pomegranate</button>
              <button type="button" class="flavor-button" data-flavor="Lemon Spritz">Lemon Spritz</button>
              <button type="button" class="flavor-button" data-flavor="Lavender">Lavender</button>
              <button type="button" class="flavor-button" data-flavor="White Chocolate">White Chocolate</button>
              <button type="button" class="flavor-button" data-flavor="Vanilla">Vanilla</button>
              <button type="button" class="flavor-button" data-flavor="Sour Apple">Sour Apple</button>
              <button type="button" class="flavor-button" data-flavor="Peach">Peach</button>
              <button type="button" class="flavor-button" data-flavor="Caramel">Caramel</button>
              <button type="button" class="flavor-button" data-flavor="Rose">Rose</button>
              <button type="button" class="flavor-button" data-flavor="Blueberry">Blueberry</button>
              <button type="button" class="flavor-button" data-flavor="Winter Spice">Winter Spice</button>
              <button type="button" class="flavor-button" data-flavor="Mexican Cinnamon">Mexican Cinnamon</button>
              <button type="button" class="flavor-button" data-flavor="Dulce de Leche">Dulce de Leche</button>
              <button type="button" class="flavor-button" data-flavor="Watermelon">Watermelon</button>
              <button type="button" class="flavor-button" data-flavor="Cotton Candy">Cotton Candy</button>
              <button type="button" class="flavor-button" data-flavor="Blackberry">Blackberry</button>
              <button type="button" class="flavor-button" data-flavor="Jellybean">Jellybean</button>
              <button type="button" class="flavor-button" data-flavor="Lavender Shortbread">Lavender Shortbread</button>
              <button type="button" class="flavor-button" data-flavor="Coconut">Coconut</button>
              <button type="button" class="flavor-button" data-flavor="Coconut Caramel">Coconut Caramel</button>
              <button type="button" class="flavor-button" data-flavor="Blueberry Lavender">Blueberry Lavender</button>
              <button type="button" class="flavor-button" data-flavor="Dubai Chocolate">Dubai Chocolate</button>
              <button type="button" class="flavor-button" data-flavor="Almond Horchata">Almond Horchata</button>
              <button type="button" class="flavor-button" data-flavor="Pecan Pie">Pecan Pie</button>
              <button type="button" class="flavor-button" data-flavor="Pumpkin Pie">Pumpkin Pie</button>
            </div>
          </div>

          <!-- Regular Flavor Selection -->
          <div class="selection-section">
            <h3 class="section-title">üçØ Regular Flavors</h3>
            <div class="flavor-grid" id="regular-options" role="group" aria-label="Regular flavor options">
              <button type="button" class="flavor-button" data-flavor="Grenadine">Grenadine</button>
              <button type="button" class="flavor-button" data-flavor="Caramel Apple Butter">Caramel Apple Butter</button>
              <button type="button" class="flavor-button" data-flavor="Cranberry">Cranberry</button>
              <button type="button" class="flavor-button" data-flavor="Lime">Lime</button>
              <button type="button" class="flavor-button" data-flavor="Dark Chocolate">Dark Chocolate</button>
            </div>
          </div>

          <!-- Ice Options -->
          <div class="selection-section">
            <h3 class="section-title">üßä Ice Preference</h3>
            <div class="option-grid" id="ice-options" role="group" aria-label="Ice options">
              <button type="button" class="option-button" data-ice="None">No Ice</button>
              <button type="button" class="option-button" data-ice="Light">Light Ice</button>
              <button type="button" class="option-button" data-ice="Regular">Regular Ice</button>
              <button type="button" class="option-button" data-ice="Extra">Extra Ice</button>
            </div>
          </div>

          <!-- Comments -->
          <div class="selection-section">
            <h3 class="section-title">üí¨ Special Requests & Comments</h3>
            <label for="order-comments" class="sr-only">Order comments</label>
            <textarea
              id="order-comments"
              class="comments-textarea"
              placeholder="Any special requests, strength preferences, or modifications? We'll try to accommodate!"
              rows="3"
            ></textarea>
          </div>

          <!-- Quantity -->
          <div class="selection-section">
            <h3 class="section-title">üî¢ Quantity</h3>
            <div class="quantity-controls">
              <button type="button" class="qty-btn" aria-label="Decrease quantity" onclick="changeQuantity(-1)">
                ‚àí
              </button>
              <input
                type="number"
                id="quantity"
                value="1"
                min="1"
                max="50"
                class="qty-input"
                inputmode="numeric"
                pattern="[0-9]*"
              >
              <button type="button" class="qty-btn" aria-label="Increase quantity" onclick="changeQuantity(1)">
                +
              </button>
            </div>
          </div>

          <div id="success-message" class="success-message" role="status" aria-live="polite"></div>

          <button type="button" id="add-to-cart-btn" class="add-to-cart-btn" onclick="addToCart()" disabled>
            Select Size, Strain & Flavor
          </button>
        </div>
      </div>
    </div>

    <script>
      // ‚Äî‚Äî‚Äî Currency formatter ‚Äî‚Äî‚Äî
      const moneyFmt = new Intl.NumberFormat(undefined, { style: 'currency', currency: 'USD' });

      // ‚Äî‚Äî‚Äî State ‚Äî‚Äî‚Äî
      let selectedSize = null;
      let selectedStrain = null;
      let selectedFlavors = [];
      let selectedIce = 'Regular';
      let basePrice = 9.0;

      // Size to price mapping
      const sizePrices = {
        'Medium': 9.00,
        'Large': 15.00,
        'Gallon': 100.00
      };

      // ‚Äî‚Äî‚Äî Init ‚Äî‚Äî‚Äî
      document.addEventListener('DOMContentLoaded', () => {
        wireOptionButtons();
        updateCartCount();
        updateUI();
      });

      function wireOptionButtons() {
        // Size buttons
        document.querySelectorAll('#size-options .option-button').forEach((btn) => {
          btn.addEventListener('click', () => {
            document.querySelectorAll('#size-options .option-button').forEach((b) => b.classList.remove('selected'));
            btn.classList.add('selected');
            selectedSize = btn.dataset.size;
            basePrice = sizePrices[selectedSize] || 9.0;
            updateUI();
          });
        });

        // Strain buttons
        document.querySelectorAll('#strain-options .option-button').forEach((btn) => {
          btn.addEventListener('click', () => {
            document.querySelectorAll('#strain-options .option-button').forEach((b) => b.classList.remove('selected'));
            btn.classList.add('selected');
            selectedStrain = btn.dataset.strain;
            updateUI();
          });
        });

        // Flavor buttons (multi-select)
        document.querySelectorAll('.flavor-button').forEach((btn) => {
          btn.addEventListener('click', () => {
            const flavor = btn.dataset.flavor;
            if (btn.classList.contains('selected')) {
              btn.classList.remove('selected');
              selectedFlavors = selectedFlavors.filter(f => f !== flavor);
            } else {
              btn.classList.add('selected');
              selectedFlavors.push(flavor);
            }
            updateUI();
          });
        });

        // Ice buttons
        document.querySelectorAll('#ice-options .option-button').forEach((btn) => {
          btn.addEventListener('click', () => {
            document.querySelectorAll('#ice-options .option-button').forEach((b) => b.classList.remove('selected'));
            btn.classList.add('selected');
            selectedIce = btn.dataset.ice;
            updateUI();
          });
        });

        // Set default ice selection
        document.querySelector('#ice-options .option-button[data-ice="Regular"]').classList.add('selected');
      }

      function updateUI() {
        const priceEl = document.getElementById('product-price');
        const btnEl = document.getElementById('add-to-cart-btn');

        // Update price display
        priceEl.textContent = moneyFmt.format(basePrice);

        // Update button state
        const canAdd = selectedSize && selectedStrain && selectedFlavors.length > 0;
        btnEl.disabled = !canAdd;
        
        if (canAdd) {
          btnEl.textContent = `Add to Cart - ${moneyFmt.format(basePrice)}`;
        } else {
          const missing = [];
          if (!selectedSize) missing.push('Size');
          if (!selectedStrain) missing.push('Strain');
          if (selectedFlavors.length === 0) missing.push('Flavor');
          btnEl.textContent = `Select ${missing.join(', ')}`;
        }
      }

      function changeQuantity(delta) {
        const input = document.getElementById('quantity');
        const newVal = Math.max(1, Math.min(50, parseInt(input.value) + delta));
        input.value = newVal;
        updateUI();
      }

      async function updateCartCount() {
        try {
          if (!window.WTFCartAPI || typeof window.WTFCartAPI.getCart !== 'function') {
            throw new Error('WTFCartAPI unavailable');
          }
          const cart = await window.WTFCartAPI.getCart();
          document.getElementById('cart-count').textContent = cart.item_count || 0;
        } catch (err) {
          console.warn('Cart count update failed:', err);
          document.getElementById('cart-count').textContent = '0';
        }
      }

      async function addToCart() {
        const btn = document.getElementById('add-to-cart-btn');
        const original = btn.textContent;
        btn.textContent = 'Adding...';
        btn.disabled = true;

        const quantity = parseInt(document.getElementById('quantity').value) || 1;
        const comments = document.getElementById('order-comments').value.trim();
        const variantId = window.KRATOM_TEAS_VARIANT_ID;

        const properties = {
          Size: selectedSize,
          Strain: selectedStrain,
          Flavors: selectedFlavors.join(', '),
          Ice: selectedIce
        };
        if (comments) properties.Comments = comments;

        try {
          const cartAPI = window.WTFCartAPI;
          if (!cartAPI || typeof cartAPI.addToCart !== 'function') {
            throw new Error('Cart service unavailable');
          }

          if (!variantId) {
            throw new Error('Kratom teas variant is not configured.');
          }

          await cartAPI.addToCart({
            id: variantId,
            quantity,
            properties,
          });

          const cart = await cartAPI.getCart();
          document.getElementById('cart-count').textContent = cart.item_count || 0;

          const success = document.getElementById('success-message');
          success.innerHTML = `‚úÖ <strong>Added to cart!</strong><br>
             üçÉ ${properties.Strain} Kratom ‚Äî <strong>${properties.Size}</strong><br>
             üçì Flavors: ${properties.Flavors}<br>
             üßä Ice: ${properties.Ice}<br>
             üî¢ Qty: ${quantity}${properties.Comments ? `<br>üí¨ ${properties.Comments}` : ''}`;
          success.classList.add('show');
          success.scrollIntoView({ behavior: 'smooth', block: 'center' });

          document.dispatchEvent(new CustomEvent('kratom:added', { detail: { variantId, ...properties, quantity } }));
        } catch (err) {
          console.error('Add to cart error:', err);
          alert('‚ùå ' + (err && err.message ? err.message : 'Error adding to cart. Please try again.'));
        } finally {
          setTimeout(() => {
            btn.textContent = original;
            btn.disabled = false;
            document.getElementById('success-message').classList.remove('show');
          }, 4000);
        }
      }
    </script>
  
